export interface EncodableContentType {
    type: string;
    subtype: string;
    parameters: Record<string, any>;
}
export interface DecodedContentType {
    type: string;
    subtype: string;
    mediaType: string;
    parameters: Record<string, string>;
}
/**
 * Check if the target ContentType's format is valid.
 * The function simply checks that the MIME format is valid,
 * it does not check the existence of type, subtype, or parameters.
 *
 * - A typical MIME example: "image/jpeg".
 * - A more complex example: "image/svg+xml;q=0.9,/;q=0.8".
 */
export declare function isContentTypeValid(contentType: string): boolean;
/**
 * Convert ContentType object to string.
 */
export declare function encodeContentType(contentType: EncodableContentType): string;
/**
 * Convert ContentType string to object.
 */
export declare function decodeContentType(contentType: string): DecodedContentType;
/**
 * Update the parameters of a content type string.
 * Note the function may change the order the provided content type.
 *
 * An example:
 * ```typescript
 * setContentTypeParameters('image/jpeg;a=1;b=2', { a: '3' }); // image/jpeg;a=3;b=2
 * ```
 */
export declare function setContentTypeParameters(contentType: string, parameters: Record<string, any>): string;
