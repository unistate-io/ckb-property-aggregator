import { Cell } from '@ckb-lumos/lumos';
import { BIish } from '@ckb-lumos/bi';
import { Hash } from '@ckb-lumos/base';
/**
 * Generate a TypeId based on the first input in Transaction.inputs,
 * and the index of the target cell in Transaction.outputs.
 */
export declare function generateTypeId(firstInput: Cell, outputIndex: BIish): Hash;
/**
 * Generate TypeIds for a group of cells in Transaction.outputs.
 */
export declare function generateTypeIdGroup(firstInput: Cell, outputs: Cell[], filter: (cell: Cell) => boolean): [number, Hash][];
/**
 * Generate TypeIds from a Transaction.outputs.
 *
 * This function is different from the `generateTypeIdGroup` function,
 * because this function generates TypeIds based on each output's original index in the list,
 * instead of generating them by each output's index in a group.
 */
export declare function generateTypeIdsByOutputs(firstInput: Cell, outputs: Cell[], filter?: (cell: Cell) => boolean): [number, Hash][];
