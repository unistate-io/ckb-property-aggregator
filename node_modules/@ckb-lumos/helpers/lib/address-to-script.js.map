{"version":3,"file":"address-to-script.js","names":["_base","require","_codec","_configManager","_bech","BECH32_LIMIT","ADDRESS_FORMAT_FULL","exports","ADDRESS_FORMAT_SHORT","ADDRESS_FORMAT_FULLDATA","ADDRESS_FORMAT_FULLTYPE","parseFullFormatAddress","address","config","getConfig","words","prefix","bech32m","decode","PREFIX","Error","formatType","body","fromWords","length","codeHash","bytes","hexify","slice","hashType","blockchain","HashType","unpack","args","parseDeprecatedCkb2019Address","bech32","shortId","argsBytes","scriptTemplate","Object","values","SCRIPTS","find","s","SHORT_ID","CODE_HASH","HASH_TYPE"],"sources":["../src/address-to-script.ts"],"sourcesContent":["// https://github.com/nervosnetwork/rfcs/blob/master/rfcs/0021-ckb-address-format/0021-ckb-address-format.md\n// | format type |                   description                                |\n// |:-----------:|--------------------------------------------------------------|\n// |  0x00       | full version identifies the hashType                        |\n// |  0x01       | short version for locks with popular codeHash, deprecated   |\n// |  0x02       | full version with hashType = \"Data\", deprecated             |\n// |  0x04       | full version with hashType = \"Type\", deprecated             |\n\nimport { Address, Script, blockchain } from \"@ckb-lumos/base\";\nimport { bytes } from \"@ckb-lumos/codec\";\nimport { getConfig } from \"@ckb-lumos/config-manager\";\nimport { bech32, bech32m } from \"bech32\";\nimport { Options } from \"./\";\n\nconst BECH32_LIMIT = 1023;\n\n/**\n * full version identifies the hashType\n */\nexport const ADDRESS_FORMAT_FULL = 0x00;\n/**\n * @deprecated\n * short version for locks with popular codeHash, deprecated\n */\nexport const ADDRESS_FORMAT_SHORT = 0x01;\n\n/**\n * @deprecated\n * full version with hashType = \"Data\", deprecated\n */\nexport const ADDRESS_FORMAT_FULLDATA = 0x02;\n\n/**\n * @deprecated\n * full version with hashType = \"Type\", deprecated\n */\nexport const ADDRESS_FORMAT_FULLTYPE = 0x04;\n\nexport function parseFullFormatAddress(\n  address: Address,\n  { config }: Options\n): Script {\n  config = config || getConfig();\n\n  // throw error here if polymod not 0x2bc830a3(BECH32M_CONST)\n  // https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki#bech32m\n  const { words, prefix } = bech32m.decode(address, BECH32_LIMIT);\n\n  if (prefix !== config.PREFIX) {\n    throw Error(\n      `Invalid prefix! Expected: ${config.PREFIX}, actual: ${prefix}`\n    );\n  }\n\n  const [formatType, ...body] = bech32m.fromWords(words);\n\n  if (formatType !== ADDRESS_FORMAT_FULL) {\n    throw new Error(\"Invalid address format type\");\n  }\n\n  if (body.length < 32 + 1) {\n    throw new Error(\"Invalid payload length, too short!\");\n  }\n\n  const codeHash = bytes.hexify(body.slice(0, 32));\n  const hashType = blockchain.HashType.unpack(body.slice(32, 33));\n  const args = bytes.hexify(body.slice(33));\n\n  return { codeHash, hashType, args };\n}\n\nexport function parseDeprecatedCkb2019Address(\n  address: string,\n  { config }: Options\n): Script {\n  config = config || getConfig();\n\n  // throw error here if polymod not 1\n  // https://github.com/bitcoin/bips/blob/master/bip-0350.mediawiki#bech32m\n  const { prefix, words } = bech32.decode(address, BECH32_LIMIT);\n\n  if (prefix !== config.PREFIX) {\n    throw Error(\n      `Invalid prefix! Expected: ${config.PREFIX}, actual: ${prefix}`\n    );\n  }\n  const [formatType, ...body] = bech32.fromWords(words);\n\n  switch (formatType) {\n    // payload = 0x01 | code_hash_index | args\n    case ADDRESS_FORMAT_SHORT: {\n      const [shortId, ...argsBytes] = body;\n\n      /* secp256k1 / multisig / ACP */\n      if (argsBytes.length !== 20) {\n        throw Error(`Invalid payload length!`);\n      }\n      const scriptTemplate = Object.values(config.SCRIPTS).find(\n        (s) => s && s.SHORT_ID === shortId\n      );\n      if (!scriptTemplate) {\n        throw Error(`Invalid code hash index: ${shortId}!`);\n      }\n      return {\n        codeHash: scriptTemplate.CODE_HASH,\n        hashType: scriptTemplate.HASH_TYPE,\n        args: bytes.hexify(argsBytes),\n      };\n    }\n    // payload = 0x02 | codeHash | args\n    case ADDRESS_FORMAT_FULLDATA: {\n      if (body.length < 32) {\n        throw Error(`Invalid payload length!`);\n      }\n      return {\n        codeHash: bytes.hexify(body.slice(0, 32)),\n        hashType: \"data\",\n        args: bytes.hexify(body.slice(32)),\n      };\n    }\n    // payload = 0x04 | codeHash | args\n    case ADDRESS_FORMAT_FULLTYPE: {\n      if (body.length < 32) {\n        throw Error(`Invalid payload length!`);\n      }\n      return {\n        codeHash: bytes.hexify(body.slice(0, 32)),\n        hashType: \"type\",\n        args: bytes.hexify(body.slice(32)),\n      };\n    }\n  }\n  throw Error(`Invalid payload format type: ${formatType}`);\n}\n"],"mappings":"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"}