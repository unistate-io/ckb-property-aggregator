{"version":3,"file":"index.js","names":["_jsbi","_interopRequireDefault","require","obj","__esModule","default","isBIish","value","match","BI","isBI","constructor","jsbi","_isBI","add","other","toBI","JSBI","toJSBI","sub","subtract","div","divide","mul","multiply","mod","remainder","abs","greaterThanOrEqual","unaryMinus","pow","exponentiate","and","bitwiseAnd","or","bitwiseOr","xor","bitwiseXor","not","bitwiseNot","mask","jsbiOther","lessThan","Error","length","toString","lessThanOrEqual","maskNum","leftShift","signedRightShift","shl","shr","eq","equal","lt","lte","gt","greaterThan","gte","isNegative","isZero","toNumber","toBigInt","BigInt","e","radix","toHexString","from","isBILike","exports","validUnitNames","ckbDecimals","negativeOne","formatUnit","unit","decimals","parseDecimals","formatFixed","parseUnit","parseFixed","isValidDecimalSize","multiplier","Array","fill","join","wholePart","result","decimalPart","substring","valueParts","split","wholeValue","decimalValue","shannons","indexOf","Number","isInteger"],"sources":["../src/index.ts"],"sourcesContent":["import JSBI from \"jsbi\";\nexport type BIish = number | string | bigint | BI;\n\nexport function isBIish(value: unknown): value is BIish {\n  return (\n    value !== null &&\n    ((typeof value === \"number\" && value % 1 === 0) ||\n      (typeof value === \"string\" &&\n        (!!value.match(/^0x(0|[0-9a-fA-F]+)$/) ||\n          !!value.match(/^-?[0-9]+$/))) ||\n      typeof value === \"bigint\" ||\n      BI.isBI(value))\n  );\n}\n\nexport class BI {\n  private readonly jsbi: JSBI;\n  readonly _isBI: boolean;\n\n  constructor(value: JSBI) {\n    this.jsbi = value;\n    this._isBI = true;\n  }\n\n  add(other: BIish): BI {\n    return toBI(JSBI.add(this.jsbi, toJSBI(other)));\n  }\n\n  sub(other: BIish): BI {\n    return toBI(JSBI.subtract(this.jsbi, toJSBI(other)));\n  }\n\n  div(other: BIish): BI {\n    return toBI(JSBI.divide(this.jsbi, toJSBI(other)));\n  }\n\n  mul(other: BIish): BI {\n    return toBI(JSBI.multiply(this.jsbi, toJSBI(other)));\n  }\n\n  mod(other: BIish): BI {\n    return toBI(JSBI.remainder(this.jsbi, toJSBI(other)));\n  }\n\n  abs(): BI {\n    if (JSBI.greaterThanOrEqual(this.jsbi, toJSBI(0))) {\n      return toBI(this.jsbi);\n    } else {\n      return toBI(JSBI.unaryMinus(this.jsbi));\n    }\n  }\n\n  pow(other: BIish): BI {\n    return toBI(JSBI.exponentiate(this.jsbi, toJSBI(other)));\n  }\n\n  and(other: BIish): BI {\n    return toBI(JSBI.bitwiseAnd(this.jsbi, toJSBI(other)));\n  }\n\n  or(other: BIish): BI {\n    return toBI(JSBI.bitwiseOr(this.jsbi, toJSBI(other)));\n  }\n\n  xor(other: BIish): BI {\n    return toBI(JSBI.bitwiseXor(this.jsbi, toJSBI(other)));\n  }\n\n  not(): BI {\n    return toBI(JSBI.bitwiseNot(this.jsbi));\n  }\n\n  mask(other: BIish): BI {\n    const jsbiOther = toJSBI(other);\n    if (\n      JSBI.lessThan(jsbiOther, toJSBI(0)) ||\n      JSBI.lessThan(this.jsbi, toJSBI(0))\n    ) {\n      throw new Error(\"mask works only with positive numbers\");\n    }\n\n    const length = toJSBI(this.jsbi.toString(2).length);\n    if (JSBI.lessThanOrEqual(length, jsbiOther)) {\n      return toBI(this.jsbi);\n    } else {\n      const maskNum = JSBI.leftShift(\n        JSBI.signedRightShift(this.jsbi, jsbiOther),\n        jsbiOther\n      );\n      return toBI(JSBI.bitwiseXor(this.jsbi, maskNum));\n    }\n  }\n\n  shl(other: BIish): BI {\n    return toBI(JSBI.leftShift(this.jsbi, toJSBI(other)));\n  }\n\n  shr(other: BIish): BI {\n    return toBI(JSBI.signedRightShift(this.jsbi, toJSBI(other)));\n  }\n\n  eq(other: BIish): boolean {\n    return JSBI.equal(this.jsbi, toJSBI(other));\n  }\n\n  lt(other: BIish): boolean {\n    return JSBI.lessThan(this.jsbi, toJSBI(other));\n  }\n\n  lte(other: BIish): boolean {\n    return JSBI.lessThanOrEqual(this.jsbi, toJSBI(other));\n  }\n\n  gt(other: BIish): boolean {\n    return JSBI.greaterThan(this.jsbi, toJSBI(other));\n  }\n\n  gte(other: BIish): boolean {\n    return JSBI.greaterThanOrEqual(this.jsbi, toJSBI(other));\n  }\n\n  isNegative(): boolean {\n    return JSBI.lessThan(this.jsbi, toJSBI(0));\n  }\n\n  isZero(): boolean {\n    return JSBI.equal(this.jsbi, toJSBI(0));\n  }\n\n  toNumber(): number {\n    return JSBI.toNumber(this.jsbi);\n  }\n\n  toBigInt(): bigint {\n    try {\n      return BigInt(this.jsbi.toString(10));\n    } catch (e) {\n      throw new Error(\"this platform does not support BigInt\");\n    }\n  }\n\n  toString(radix?: number): string {\n    radix = radix || 10;\n    return this.jsbi.toString(radix);\n  }\n\n  toHexString(): string {\n    if (JSBI.lessThan(this.jsbi, toJSBI(0))) {\n      return \"-0x\" + JSBI.unaryMinus(this.jsbi).toString(16);\n    } else {\n      return \"0x\" + this.jsbi.toString(16);\n    }\n  }\n\n  static from(value: unknown): BI {\n    if (value instanceof BI) {\n      return value;\n    } else if (isBIish(value)) {\n      return toBI(toJSBI(value));\n    } else if (value instanceof JSBI) {\n      return toBI(toJSBI(value.toString()));\n    } else {\n      throw new Error(`invalid type: ${value} can't be converted into BI`);\n    }\n  }\n\n  static isBI(value: unknown): value is BI {\n    return isBILike(value) && !!value._isBI;\n  }\n}\n\nfunction isBILike(value: unknown): value is Record<string, unknown> {\n  if (value == null) return false;\n  return typeof value === \"object\";\n}\n\nfunction toBI(value: JSBI): BI {\n  return new BI(value);\n}\n\nexport function toJSBI(value: BIish): JSBI {\n  if (typeof value === \"number\" || typeof value === \"string\") {\n    return JSBI.BigInt(value);\n  } else {\n    return JSBI.BigInt(value.toString());\n  }\n}\n\nexport type Unit = \"shannon\" | \"ckb\" | number;\n\nconst validUnitNames = [\"shannon\", \"ckb\"];\n\nexport const ckbDecimals = 8;\n\nconst negativeOne = BI.from(-1);\n\nexport function formatUnit(value: BIish, unit: Unit): string {\n  const decimals = parseDecimals(unit);\n  return formatFixed(value, decimals);\n}\n\nexport function parseUnit(value: string, unit: Unit): BI {\n  const decimals = parseDecimals(unit);\n  return parseFixed(value, decimals);\n}\n\nfunction formatFixed(value: BIish, decimals: number): string {\n  if (!isValidDecimalSize(decimals)) {\n    throw new Error(`decimal size must be a non-negative integer`);\n  }\n\n  const multiplier = \"1\" + Array(decimals).fill(\"0\").join(\"\");\n\n  value = BI.from(value);\n  const isNegative = value.isNegative();\n  if (isNegative) {\n    value = value.mul(negativeOne);\n  }\n\n  const wholePart = value.div(multiplier).toString();\n  let result = wholePart;\n  if (multiplier.length > 1) {\n    let decimalPart = value.mod(multiplier).toString();\n    while (decimalPart.length < multiplier.length - 1) {\n      decimalPart = \"0\" + decimalPart;\n    }\n    // remove trailing zeros\n    decimalPart = decimalPart.match(/^([0-9]*[1-9]|0)(0*)/)![1];\n    result += \".\" + decimalPart;\n  }\n\n  if (isNegative) {\n    result = \"-\" + result;\n  }\n\n  return result;\n}\n\nfunction parseFixed(value: string, decimals: number): BI {\n  if (!isValidDecimalSize(decimals)) {\n    throw new Error(`decimal size must be a non-negative integer`);\n  }\n\n  // check if value represents a valid decimal number\n  if (!value.match(/^-?\\d+(\\.\\d{1,})?$/)) {\n    throw new Error(\"invalid decimal string\");\n  }\n\n  const multiplier = \"1\" + Array(decimals).fill(\"0\").join(\"\");\n\n  const isNegative = value.substring(0, 1) === \"-\";\n\n  if (isNegative) {\n    value = value.substring(1);\n  }\n\n  let wholePart, decimalPart;\n  const valueParts = value.split(\".\");\n  if (valueParts.length === 1) {\n    wholePart = valueParts[0];\n    decimalPart = \"0\";\n  } else if (valueParts.length === 2) {\n    wholePart = valueParts[0];\n    decimalPart = valueParts[1];\n  } else {\n    throw new Error(\"too many decimal points (should not happen)\");\n  }\n\n  // remove leading zeros of whole part\n  while (wholePart.length > 0 && wholePart[0] === \"0\") {\n    wholePart = wholePart.substring(1);\n  }\n  if (wholePart === \"\") {\n    wholePart = \"0\";\n  }\n\n  // remove trailing zeros of decimal part\n  while (\n    decimalPart.length > 0 &&\n    decimalPart[decimalPart.length - 1] === \"0\"\n  ) {\n    decimalPart = decimalPart.substring(0, decimalPart.length - 1);\n  }\n  if (decimalPart.length > multiplier.length - 1) {\n    throw new Error(\"decimal part exceeds max decimals\");\n  }\n  if (decimalPart === \"\") {\n    decimalPart = \"0\";\n  }\n\n  // pad decimal part with zeros to get to shannon\n  while (decimalPart.length < multiplier.length - 1) {\n    decimalPart += \"0\";\n  }\n\n  const wholeValue = BI.from(wholePart);\n  const decimalValue = BI.from(decimalPart);\n\n  let shannons = wholeValue.mul(multiplier).add(decimalValue);\n  if (isNegative) {\n    shannons = shannons.mul(negativeOne);\n  }\n\n  return shannons;\n}\n\nfunction parseDecimals(unit: Unit): number {\n  let decimals = 0;\n  if (typeof unit === \"string\") {\n    if (validUnitNames.indexOf(unit) === -1) {\n      throw new Error(\n        `invalid unit name, supported names are ${validUnitNames.join(\", \")}`\n      );\n    }\n    if (unit === \"ckb\") {\n      decimals = ckbDecimals;\n    }\n  } else {\n    if (isValidDecimalSize(unit)) {\n      decimals = unit;\n    } else {\n      throw new Error(`unit of integer must be a non-negative integer`);\n    }\n  }\n  return decimals;\n}\n\nfunction isValidDecimalSize(decimals: number): boolean {\n  return Number.isInteger(decimals) && decimals >= 0;\n}\n"],"mappings":"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"}