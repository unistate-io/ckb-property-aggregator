{"version":3,"file":"uint.js","names":["_bi","require","_base","_error","assertNumberRange","value","min","max","typeName","BI","from","lt","gt","CodecBaseParseError","toString","createUintNumberCodec","byteLength","littleEndian","codec","createUintBICodec","__isFixedCodec__","pack","packable","unpack","unpackable","toNumber","shl","sub","createFixedBytesCodec","biIsh","endianType","Number","isSafeInteger","num","result","DataView","ArrayBuffer","i","setUint8","and","shr","Uint8Array","buffer","buf","view","or","getUint8","Uint8","exports","Uint16LE","Uint16BE","Uint16","Uint32LE","Uint32BE","Uint32","Uint64LE","Uint64BE","Uint64","Uint128LE","Uint128BE","Uint128","Uint256LE","Uint256BE","Uint256","Uint512LE","Uint512BE","Uint512"],"sources":["../../src/number/uint.ts"],"sourcesContent":["import { BI, BIish } from \"@ckb-lumos/bi\";\nimport { createFixedBytesCodec, FixedBytesCodec } from \"../base\";\nimport { CodecBaseParseError } from \"../error\";\n\nfunction assertNumberRange(\n  value: BIish,\n  min: BIish,\n  max: BIish,\n  typeName: string\n): void {\n  value = BI.from(value);\n\n  if (value.lt(min) || value.gt(max)) {\n    throw new CodecBaseParseError(\n      `Value must be between ${min.toString()} and ${max.toString()}, but got ${value.toString()}`,\n      typeName\n    );\n  }\n}\n\nfunction createUintNumberCodec(\n  byteLength: number,\n  littleEndian = false\n): FixedBytesCodec<number, BIish> {\n  const codec = createUintBICodec(byteLength, littleEndian);\n  return {\n    __isFixedCodec__: true,\n    byteLength,\n    pack: (packable) => codec.pack(packable),\n    unpack: (unpackable) => codec.unpack(unpackable).toNumber(),\n  };\n}\n\nconst createUintBICodec = (byteLength: number, littleEndian = false) => {\n  const max = BI.from(1)\n    .shl(byteLength * 8)\n    .sub(1);\n\n  return createFixedBytesCodec<BI, BIish>({\n    byteLength,\n    pack(biIsh) {\n      let endianType: \"LE\" | \"BE\" | \"\" = littleEndian ? \"LE\" : \"BE\";\n\n      if (byteLength <= 1) {\n        endianType = \"\";\n      }\n      const typeName = `Uint${byteLength * 8}${endianType}`;\n      if (typeof biIsh === \"number\" && !Number.isSafeInteger(biIsh)) {\n        throw new CodecBaseParseError(\n          `${biIsh} is not a safe integer`,\n          typeName\n        );\n      }\n\n      let num = BI.from(biIsh);\n      assertNumberRange(num, 0, max, typeName);\n\n      const result = new DataView(new ArrayBuffer(byteLength));\n\n      for (let i = 0; i < byteLength; i++) {\n        if (littleEndian) {\n          result.setUint8(i, num.and(0xff).toNumber());\n        } else {\n          result.setUint8(byteLength - i - 1, num.and(0xff).toNumber());\n        }\n        num = num.shr(8);\n      }\n\n      return new Uint8Array(result.buffer);\n    },\n    unpack: (buf) => {\n      const view = new DataView(Uint8Array.from(buf).buffer);\n      let result = BI.from(0);\n\n      for (let i = 0; i < byteLength; i++) {\n        if (littleEndian) {\n          result = result.or(BI.from(view.getUint8(i)).shl(i * 8));\n        } else {\n          result = result.shl(8).or(view.getUint8(i));\n        }\n      }\n\n      return result;\n    },\n  });\n};\n\nexport const Uint8 = createUintNumberCodec(1);\n\nexport const Uint16LE = createUintNumberCodec(2, true);\nexport const Uint16BE = createUintNumberCodec(2);\n/**\n * @alias Uint16LE\n */\nexport const Uint16 = Uint16LE;\n\nexport const Uint32LE = createUintNumberCodec(4, true);\nexport const Uint32BE = createUintNumberCodec(4);\n/**\n * @alias Uint32LE\n */\nexport const Uint32 = Uint32LE;\n\nexport const Uint64LE = createUintBICodec(8, true);\nexport const Uint64BE = createUintBICodec(8);\n/**\n * @alias Uint64LE\n */\nexport const Uint64 = Uint64LE;\n\nexport const Uint128LE = createUintBICodec(16, true);\nexport const Uint128BE = createUintBICodec(16);\n/**\n * @alias Uint128LE\n */\nexport const Uint128 = Uint128LE;\n\nexport const Uint256LE = createUintBICodec(32, true);\nexport const Uint256BE = createUintBICodec(32);\n/**\n * @alias Uint256LE\n */\nexport const Uint256 = Uint256LE;\n\nexport const Uint512LE = createUintBICodec(64, true);\nexport const Uint512BE = createUintBICodec(64);\n/**\n * @alias Uint512LE\n */\nexport const Uint512 = Uint512LE;\n"],"mappings":"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"}