{"version":3,"file":"error.js","names":["CODEC_OPTIONAL_PATH","exports","CodecBaseParseError","Error","constructor","message","expectedType","CODEC_EXECUTE_ERROR_NAME","isCodecExecuteError","error","name","CodecExecuteError","origin","_defineProperty","updateKey","key","keys","push","getPackErrorMessage","_this$origin$stack","reducer","acc","cur","index","path","reduceRight","stack","replace"],"sources":["../src/error.ts"],"sourcesContent":["// lc for lumos codec\nexport const CODEC_OPTIONAL_PATH = \"__lc_option__\";\ntype CodecOptionalPath = typeof CODEC_OPTIONAL_PATH;\nexport class CodecBaseParseError extends Error {\n  constructor(message: string, public expectedType: string) {\n    super(message);\n  }\n}\n\nconst CODEC_EXECUTE_ERROR_NAME = \"CodecExecuteError\";\nexport function isCodecExecuteError(\n  error: unknown\n): error is CodecExecuteError {\n  if (!(error instanceof Error)) return false;\n  return error.name === CODEC_EXECUTE_ERROR_NAME;\n}\n\n/**\n * This Error class can collect CodecBaseParseError, and put an human-readable error\n */\nexport class CodecExecuteError extends Error {\n  name = CODEC_EXECUTE_ERROR_NAME;\n  constructor(private origin: CodecBaseParseError) {\n    super();\n  }\n\n  keys: (number | string | CodecOptionalPath)[] = [];\n\n  public updateKey(key: number | string | symbol): void {\n    this.keys.push(key as number | string);\n    this.message = this.getPackErrorMessage();\n  }\n\n  private getPackErrorMessage(): string {\n    type CodecPath = number | string | CodecOptionalPath;\n\n    const reducer = (acc: string, cur: CodecPath, index: number) => {\n      if (cur === CODEC_OPTIONAL_PATH) {\n        cur = index === 0 ? \"?\" : \"?.\";\n      } else if (typeof cur === \"number\") {\n        cur = `[${cur}]`;\n      } else {\n        cur = `.${cur}`;\n      }\n      return acc + cur;\n    };\n\n    const path = this.keys.reduceRight(reducer, \"input\");\n\n    return `Expect type ${this.origin.expectedType} at ${path} but got error: ${\n      this.origin.message\n    }\n    ${this.origin.stack?.replace(/Error:.+?\\n/, \"\")}\n    `;\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA;AACO,MAAMA,mBAAmB,GAAG,eAAe;AAACC,OAAA,CAAAD,mBAAA,GAAAA,mBAAA;AAE5C,MAAME,mBAAmB,SAASC,KAAK,CAAC;EAC7CC,WAAWA,CAACC,OAAe,EAASC,YAAoB,EAAE;IACxD,KAAK,CAACD,OAAO,CAAC;IAAC,KADmBC,YAAoB,GAApBA,YAAoB;EAExD;AACF;AAACL,OAAA,CAAAC,mBAAA,GAAAA,mBAAA;AAED,MAAMK,wBAAwB,GAAG,mBAAmB;AAC7C,SAASC,mBAAmBA,CACjCC,KAAc,EACc;EAC5B,IAAI,EAAEA,KAAK,YAAYN,KAAK,CAAC,EAAE,OAAO,KAAK;EAC3C,OAAOM,KAAK,CAACC,IAAI,KAAKH,wBAAwB;AAChD;;AAEA;AACA;AACA;AACO,MAAMI,iBAAiB,SAASR,KAAK,CAAC;EAE3CC,WAAWA,CAASQ,MAA2B,EAAE;IAC/C,KAAK,CAAC,CAAC;IAACC,eAAA,eAFHN,wBAAwB;IAAAM,eAAA,eAKiB,EAAE;IAAA,KAJ9BD,MAA2B,GAA3BA,MAA2B;EAE/C;EAIOE,SAASA,CAACC,GAA6B,EAAQ;IACpD,IAAI,CAACC,IAAI,CAACC,IAAI,CAACF,GAAsB,CAAC;IACtC,IAAI,CAACV,OAAO,GAAG,IAAI,CAACa,mBAAmB,CAAC,CAAC;EAC3C;EAEQA,mBAAmBA,CAAA,EAAW;IAAA,IAAAC,kBAAA;IAGpC,MAAMC,OAAO,GAAGA,CAACC,GAAW,EAAEC,GAAc,EAAEC,KAAa,KAAK;MAC9D,IAAID,GAAG,KAAKtB,mBAAmB,EAAE;QAC/BsB,GAAG,GAAGC,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI;MAChC,CAAC,MAAM,IAAI,OAAOD,GAAG,KAAK,QAAQ,EAAE;QAClCA,GAAG,GAAI,IAAGA,GAAI,GAAE;MAClB,CAAC,MAAM;QACLA,GAAG,GAAI,IAAGA,GAAI,EAAC;MACjB;MACA,OAAOD,GAAG,GAAGC,GAAG;IAClB,CAAC;IAED,MAAME,IAAI,GAAG,IAAI,CAACR,IAAI,CAACS,WAAW,CAACL,OAAO,EAAE,OAAO,CAAC;IAEpD,OAAQ,eAAc,IAAI,CAACR,MAAM,CAACN,YAAa,OAAMkB,IAAK,mBACxD,IAAI,CAACZ,MAAM,CAACP,OACb;AACL,MAAI,CAAAc,kBAAA,GAAE,IAAI,CAACP,MAAM,CAACc,KAAK,cAAAP,kBAAA,uBAAjBA,kBAAA,CAAmBQ,OAAO,CAAC,aAAa,EAAE,EAAE,CAAE;AACpD,KAAK;EACH;AACF;AAAC1B,OAAA,CAAAU,iBAAA,GAAAA,iBAAA"}