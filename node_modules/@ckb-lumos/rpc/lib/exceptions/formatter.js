"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.StringHashTypeException = exports.PageSizeTooSmallException = exports.PageSizeTooLargeException = exports.OutputsValidatorTypeException = exports.HexStringWithout0xException = exports.BigintOrHexStringTypeException = void 0;
var _ErrorCode = _interopRequireDefault(require("./ErrorCode"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); } // eslint-disable-next-line import/no-named-as-default
class PageSizeTooLargeException extends RangeError {
  constructor(pageSize, maxSize) {
    super(`Expect page size to be at most ${maxSize}, but ${pageSize} received`);
    _defineProperty(this, "code", _ErrorCode.default.ParameterInvalid);
  }
}
exports.PageSizeTooLargeException = PageSizeTooLargeException;
class PageSizeTooSmallException extends RangeError {
  constructor(pageSize, minSize) {
    super(`Expect page size to be at least ${minSize}, but ${pageSize} received`);
    _defineProperty(this, "code", _ErrorCode.default.ParameterInvalid);
  }
}
exports.PageSizeTooSmallException = PageSizeTooSmallException;
class OutputsValidatorTypeException extends TypeError {
  constructor() {
    super(`Expect outputs validator to be 'default' or 'passthrough'`);
    _defineProperty(this, "code", _ErrorCode.default.ParameterInvalid);
  }
}

/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types */
exports.OutputsValidatorTypeException = OutputsValidatorTypeException;
class BigintOrHexStringTypeException extends TypeError {
  constructor(value) {
    super(`Expect number to be bigint or hex string, but ${value} received`);
    _defineProperty(this, "code", _ErrorCode.default.ParameterInvalid);
  }
}
exports.BigintOrHexStringTypeException = BigintOrHexStringTypeException;
class StringHashTypeException extends TypeError {
  constructor(hash) {
    super(`Expect hash to be string, but ${hash} received`);
    _defineProperty(this, "code", _ErrorCode.default.ParameterInvalid);
  }
}
/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types */
exports.StringHashTypeException = StringHashTypeException;
class HexStringWithout0xException extends Error {
  constructor(hex) {
    super(`Hex string ${hex} should start with 0x`);
    _defineProperty(this, "code", _ErrorCode.default.ParameterInvalid);
  }
}
exports.HexStringWithout0xException = HexStringWithout0xException;
var _default = {
  PageSizeTooLargeException,
  PageSizeTooSmallException,
  OutputsValidatorTypeException,
  BigintOrHexStringTypeException,
  StringHashTypeException,
  HexStringWithout0xException
};
exports.default = _default;
//# sourceMappingURL=formatter.js.map