{"version":3,"file":"chain.js","names":["_paramsFormatter","require","resultFmts","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_default","getTipBlockNumber","method","paramsFormatters","resultFormatters","toNumber","getTipHeader","toHeader","getCurrentEpoch","toEpoch","getEpochByNumber","paramsFmts","getBlockHash","getBlock","toHash","toBlock","getBlockByNumber","getHeader","getHeaderByNumber","getLiveCell","toOutPoint","toLiveCellWithStatus","getTransaction","toTransactionWithStatus","getCellbaseOutputCapacityDetails","toCellbaseOutputCapacityDetails","getBlockEconomicState","toBlockEconomicState","getTransactionProof","toArray","toOptional","toTransactionProof","verifyTransactionProof","getConsensus","toConsensus","exports"],"sources":["../../src/Base/chain.ts"],"sourcesContent":["import { formatter as paramsFmts } from \"../paramsFormatter\";\nimport * as resultFmts from \"../resultFormatter\";\n\nexport default {\n  getTipBlockNumber: {\n    method: \"get_tip_block_number\",\n    paramsFormatters: [],\n    resultFormatters: resultFmts.toNumber,\n  },\n\n  getTipHeader: {\n    method: \"get_tip_header\",\n    paramsFormatters: [],\n    resultFormatters: resultFmts.toHeader,\n  },\n\n  getCurrentEpoch: {\n    method: \"get_current_epoch\",\n    paramsFormatters: [],\n    resultFormatters: resultFmts.toEpoch,\n  },\n\n  getEpochByNumber: {\n    method: \"get_epoch_by_number\",\n    paramsFormatters: [paramsFmts.toNumber],\n    resultFormatters: resultFmts.toEpoch,\n  },\n\n  getBlockHash: {\n    method: \"get_block_hash\",\n    paramsFormatters: [paramsFmts.toNumber],\n  },\n\n  getBlock: {\n    method: \"get_block\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toBlock,\n  },\n\n  getBlockByNumber: {\n    method: \"get_block_by_number\",\n    paramsFormatters: [paramsFmts.toNumber],\n    resultFormatters: resultFmts.toBlock,\n  },\n\n  getHeader: {\n    method: \"get_header\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toHeader,\n  },\n\n  getHeaderByNumber: {\n    method: \"get_header_by_number\",\n    paramsFormatters: [paramsFmts.toNumber],\n    resultFormatters: resultFmts.toHeader,\n  },\n\n  getLiveCell: {\n    method: \"get_live_cell\",\n    paramsFormatters: [paramsFmts.toOutPoint],\n    resultFormatters: resultFmts.toLiveCellWithStatus,\n  },\n\n  getTransaction: {\n    method: \"get_transaction\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toTransactionWithStatus,\n  },\n\n  getCellbaseOutputCapacityDetails: {\n    method: \"get_cellbase_output_capacity_details\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toCellbaseOutputCapacityDetails,\n  },\n\n  getBlockEconomicState: {\n    method: \"get_block_economic_state\",\n    paramsFormatters: [paramsFmts.toHash],\n    resultFormatters: resultFmts.toBlockEconomicState,\n  },\n\n  getTransactionProof: {\n    method: \"get_transaction_proof\",\n    paramsFormatters: [\n      paramsFmts.toArray(paramsFmts.toHash),\n      paramsFmts.toOptional(paramsFmts.toHash),\n    ],\n    resultFormatters: resultFmts.toTransactionProof,\n  },\n\n  verifyTransactionProof: {\n    method: \"verify_transaction_proof\",\n    paramsFormatters: [paramsFmts.toTransactionProof],\n  },\n\n  getConsensus: {\n    method: \"get_consensus\",\n    paramsFormatters: [],\n    resultFormatters: resultFmts.toConsensus,\n  },\n};\n"],"mappings":"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"}