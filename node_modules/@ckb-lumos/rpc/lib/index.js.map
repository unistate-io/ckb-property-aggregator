{"version":3,"file":"index.js","names":["_Base","require","_method","_paramsFormatter2","resultFormatter","_interopRequireWildcard","_exceptions","_crossFetch","_interopRequireDefault","_abortController","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_classPrivateFieldInitSpec","privateMap","_checkPrivateRedeclaration","privateCollection","_classPrivateFieldSet","receiver","descriptor","_classExtractFieldDescriptor","_classApplyDescriptorSet","_classPrivateFieldGet","_classApplyDescriptorGet","action","ParamsFormatter","paramsFormatter","exports","ResultFormatter","_config","_node","_paramsFormatter","_resultFormatter","CKBRPC","Base","node","constructor","url","config","options","method","Method","name","params","ctx","proxied","Proxy","p","methods","keys","_p$","indexOf","MethodInBatchNotFoundException","Reflect","defineProperties","add","args","push","remove","i","splice","exec","payload","map","f","rpcProperties","getPayload","err","PayloadInBatchException","message","controller","AbortController","signal","timeout","setTimeout","abort","batchRes","fetch","headers","body","JSON","stringify","then","json","clearTimeout","_ctx$rpcProperties$pr","_ctx$rpcProperties$pr2","_ctx$rpcProperties$pr3","id","IdNotMatchedInBatchException","resultFormatters","result","forEach","setNode","fetch_","addMethod","assign","RPC"],"sources":["../src/index.ts"],"sourcesContent":["import { Base } from \"./Base\";\nimport { Method } from \"./method\";\nimport { CKBComponents } from \"./types/api\";\nimport { formatter as paramsFormatter } from \"./paramsFormatter\";\nimport * as resultFormatter from \"./resultFormatter\";\nimport {\n  IdNotMatchedInBatchException,\n  MethodInBatchNotFoundException,\n  PayloadInBatchException,\n} from \"./exceptions\";\nimport { RPCConfig } from \"./types/common\";\nimport fetch_ from \"cross-fetch\";\nimport AbortController from \"abort-controller\";\n\nexport const ParamsFormatter = paramsFormatter;\nexport const ResultFormatter = resultFormatter;\n\nexport class CKBRPC extends Base {\n  #config: RPCConfig;\n  #node: CKBComponents.Node = {\n    url: \"\",\n  };\n\n  get node(): CKBComponents.Node {\n    return this.#node;\n  }\n\n  #paramsFormatter = paramsFormatter;\n\n  get paramsFormatter(): typeof paramsFormatter {\n    return this.#paramsFormatter;\n  }\n\n  #resultFormatter = resultFormatter;\n\n  get resultFormatter(): typeof resultFormatter {\n    return this.#resultFormatter;\n  }\n\n  constructor(url: string, config: Partial<RPCConfig> = {}) {\n    super();\n    this.setNode({ url });\n    const { timeout = 30000, fetch = fetch_ } = config;\n    this.#config = { timeout, fetch };\n\n    Object.defineProperties(this, {\n      addMethod: {\n        value: this.addMethod,\n        enumerable: false,\n        writable: false,\n        configurable: false,\n      },\n      setNode: {\n        value: this.setNode,\n        enumerable: false,\n        writable: false,\n        configurable: false,\n      },\n      // createBatchRequest: { value: this.createBatchRequest, enumerable: false, writable: false, configurable: false },\n    });\n\n    Object.keys(this.rpcProperties).forEach((name) => {\n      this.addMethod({ name, ...this.rpcProperties[name] }, this.#config);\n    });\n  }\n\n  public setNode(node: CKBComponents.Node): CKBComponents.Node {\n    Object.assign(this.node, node);\n    return this.node;\n  }\n\n  public addMethod = (\n    options: CKBComponents.Method,\n    config?: RPCConfig\n  ): void => {\n    const method = new Method(this.node, options, config);\n\n    Object.defineProperty(this, options.name, {\n      value: method.call,\n      enumerable: true,\n    });\n  };\n  /* eslint-disable */\n  public createBatchRequest = <\n    N extends keyof Base,\n    P extends (string | number | object)[],\n    R = any[]\n  >(\n    // TODO fix me\n    // params: [method: N, ...rest: P][] = [],\n    params: any = []\n  ) => {\n    const ctx = this;\n\n    // TODO fix me\n    const proxied: any = new Proxy([], {\n      set(...p) {\n        const methods = Object.keys(ctx);\n        if (p[1] !== \"length\") {\n          const name = p?.[2]?.[0];\n          if (methods.indexOf(name) === -1) {\n            throw new MethodInBatchNotFoundException(name);\n          }\n        }\n        return Reflect.set(...p);\n      },\n    });\n\n    Object.defineProperties(proxied, {\n      add: {\n        value(...args: P) {\n          this.push(args);\n          return this;\n        },\n      },\n      remove: {\n        value(i: number) {\n          this.splice(i, 1);\n          return this;\n        },\n      },\n      exec: {\n        async value() {\n          // TODO fix me\n          const payload = proxied.map(([f, ...p]: any, i: any) => {\n            try {\n              const method = new Method(ctx.node, {\n                ...ctx.rpcProperties[f],\n                name: f,\n              });\n              return method.getPayload(...p);\n            } catch (err) {\n              throw new PayloadInBatchException(i, (err as Error).message);\n            }\n          });\n\n          const controller = new AbortController();\n          const signal = controller.signal as AbortSignal;\n\n          const timeout = setTimeout(\n            () => controller.abort(),\n            ctx.#config.timeout\n          );\n\n          const batchRes = await ctx.#config\n            .fetch(ctx.#node.url, {\n              method: \"POST\",\n              headers: { \"content-type\": \"application/json\" },\n              body: JSON.stringify(payload),\n              signal,\n            })\n            .then((res) => res.json());\n\n          clearTimeout(timeout);\n\n          return batchRes.map((res: any, i: number) => {\n            if (res.id !== payload[i].id) {\n              return new IdNotMatchedInBatchException(i, payload[i].id, res.id);\n            }\n            return (\n              ctx.rpcProperties[proxied[i][0]].resultFormatters?.(res.result) ??\n              res.result\n            );\n          });\n        },\n      },\n    });\n    // TODO fix me\n    params.forEach((p: any) => proxied.push(p));\n\n    return proxied as typeof proxied & {\n      add: (n: N, ...p: P) => typeof proxied;\n      remove: (index: number) => typeof proxied;\n      exec: () => Promise<R>;\n    };\n  };\n}\n\nexport { CKBRPC as RPC };\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAEA,IAAAE,iBAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAC,uBAAA,CAAAJ,OAAA;AACA,IAAAK,WAAA,GAAAL,OAAA;AAMA,IAAAM,WAAA,GAAAC,sBAAA,CAAAP,OAAA;AACA,IAAAQ,gBAAA,GAAAD,sBAAA,CAAAP,OAAA;AAA+C,SAAAO,uBAAAE,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,CAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAT,wBAAAK,GAAA,EAAAI,WAAA,SAAAA,WAAA,IAAAJ,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAQ,KAAA,GAAAL,wBAAA,CAAAC,WAAA,OAAAI,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAT,GAAA,YAAAQ,KAAA,CAAAE,GAAA,CAAAV,GAAA,SAAAW,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAhB,GAAA,QAAAgB,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAnB,GAAA,EAAAgB,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAf,GAAA,EAAAgB,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAhB,GAAA,CAAAgB,GAAA,SAAAL,MAAA,CAAAT,OAAA,GAAAF,GAAA,MAAAQ,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAArB,GAAA,EAAAW,MAAA,YAAAA,MAAA;AAAA,SAAAW,gBAAAtB,GAAA,EAAAgB,GAAA,EAAAO,KAAA,IAAAP,GAAA,GAAAQ,cAAA,CAAAR,GAAA,OAAAA,GAAA,IAAAhB,GAAA,IAAAa,MAAA,CAAAC,cAAA,CAAAd,GAAA,EAAAgB,GAAA,IAAAO,KAAA,EAAAA,KAAA,EAAAE,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAA3B,GAAA,CAAAgB,GAAA,IAAAO,KAAA,WAAAvB,GAAA;AAAA,SAAAwB,eAAAI,GAAA,QAAAZ,GAAA,GAAAa,YAAA,CAAAD,GAAA,2BAAAZ,GAAA,gBAAAA,GAAA,GAAAc,MAAA,CAAAd,GAAA;AAAA,SAAAa,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAd,IAAA,CAAAY,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAC,SAAA,4DAAAN,IAAA,gBAAAF,MAAA,GAAAS,MAAA,EAAAR,KAAA;AAAA,SAAAS,2BAAAxC,GAAA,EAAAyC,UAAA,EAAAlB,KAAA,IAAAmB,0BAAA,CAAA1C,GAAA,EAAAyC,UAAA,GAAAA,UAAA,CAAApB,GAAA,CAAArB,GAAA,EAAAuB,KAAA;AAAA,SAAAmB,2BAAA1C,GAAA,EAAA2C,iBAAA,QAAAA,iBAAA,CAAAlC,GAAA,CAAAT,GAAA,eAAAsC,SAAA;AAAA,SAAAM,sBAAAC,QAAA,EAAAJ,UAAA,EAAAlB,KAAA,QAAAuB,UAAA,GAAAC,4BAAA,CAAAF,QAAA,EAAAJ,UAAA,UAAAO,wBAAA,CAAAH,QAAA,EAAAC,UAAA,EAAAvB,KAAA,UAAAA,KAAA;AAAA,SAAAyB,yBAAAH,QAAA,EAAAC,UAAA,EAAAvB,KAAA,QAAAuB,UAAA,CAAAzB,GAAA,IAAAyB,UAAA,CAAAzB,GAAA,CAAAF,IAAA,CAAA0B,QAAA,EAAAtB,KAAA,iBAAAuB,UAAA,CAAAnB,QAAA,cAAAW,SAAA,gDAAAQ,UAAA,CAAAvB,KAAA,GAAAA,KAAA;AAAA,SAAA0B,sBAAAJ,QAAA,EAAAJ,UAAA,QAAAK,UAAA,GAAAC,4BAAA,CAAAF,QAAA,EAAAJ,UAAA,iBAAAS,wBAAA,CAAAL,QAAA,EAAAC,UAAA;AAAA,SAAAC,6BAAAF,QAAA,EAAAJ,UAAA,EAAAU,MAAA,SAAAV,UAAA,CAAAhC,GAAA,CAAAoC,QAAA,eAAAP,SAAA,mBAAAa,MAAA,+CAAAV,UAAA,CAAA/B,GAAA,CAAAmC,QAAA;AAAA,SAAAK,yBAAAL,QAAA,EAAAC,UAAA,QAAAA,UAAA,CAAApC,GAAA,WAAAoC,UAAA,CAAApC,GAAA,CAAAS,IAAA,CAAA0B,QAAA,YAAAC,UAAA,CAAAvB,KAAA;AAExC,MAAM6B,eAAe,GAAGC,2BAAe;AAACC,OAAA,CAAAF,eAAA,GAAAA,eAAA;AACxC,MAAMG,eAAe,GAAG7D,eAAe;AAAC4D,OAAA,CAAAC,eAAA,GAAAA,eAAA;AAAA,IAAAC,OAAA,oBAAAnD,OAAA;AAAA,IAAAoD,KAAA,oBAAApD,OAAA;AAAA,IAAAqD,gBAAA,oBAAArD,OAAA;AAAA,IAAAsD,gBAAA,oBAAAtD,OAAA;AAExC,MAAMuD,MAAM,SAASC,UAAI,CAAC;EAM/B,IAAIC,IAAIA,CAAA,EAAuB;IAC7B,OAAAb,qBAAA,CAAO,IAAI,EAAAQ,KAAA;EACb;EAIA,IAAIJ,eAAeA,CAAA,EAA2B;IAC5C,OAAAJ,qBAAA,CAAO,IAAI,EAAAS,gBAAA;EACb;EAIA,IAAIhE,eAAeA,CAAA,EAA2B;IAC5C,OAAAuD,qBAAA,CAAO,IAAI,EAAAU,gBAAA;EACb;EAEAI,WAAWA,CAACC,GAAW,EAAEC,QAA0B,GAAG,CAAC,CAAC,EAAE;IACxD,KAAK,CAAC,CAAC;IAACzB,0BAAA,OAAAgB,OAAA;MAAA7B,QAAA;MAAAJ,KAAA;IAAA;IAAAiB,0BAAA,OAAAiB,KAAA;MAAA9B,QAAA;MAAAJ,KAAA,EArBkB;QAC1ByC,GAAG,EAAE;MACP;IAAC;IAAAxB,0BAAA,OAAAkB,gBAAA;MAAA/B,QAAA;MAAAJ,KAAA,EAMkB8B;IAAe;IAAAb,0BAAA,OAAAmB,gBAAA;MAAAhC,QAAA;MAAAJ,KAAA,EAMf7B;IAAe;IAAA4B,eAAA,oBAsCf,CACjB4C,OAA6B,EAC7BD,MAAkB,KACT;MACT,MAAME,MAAM,GAAG,IAAIC,cAAM,CAAC,IAAI,CAACN,IAAI,EAAEI,OAAO,EAAED,MAAM,CAAC;MAErDpD,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEoD,OAAO,CAACG,IAAI,EAAE;QACxC9C,KAAK,EAAE4C,MAAM,CAAChD,IAAI;QAClBM,UAAU,EAAE;MACd,CAAC,CAAC;IACJ,CAAC;IACD;IAAAH,eAAA,6BAC4B;IAK1B;IACA;IACAgD,MAAW,GAAG,EAAE,KACb;MACH,MAAMC,GAAG,GAAG,IAAI;;MAEhB;MACA,MAAMC,OAAY,GAAG,IAAIC,KAAK,CAAC,EAAE,EAAE;QACjCpD,GAAGA,CAAC,GAAGqD,CAAC,EAAE;UACR,MAAMC,OAAO,GAAG9D,MAAM,CAAC+D,IAAI,CAACL,GAAG,CAAC;UAChC,IAAIG,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;YAAA,IAAAG,GAAA;YACrB,MAAMR,IAAI,GAAGK,CAAC,aAADA,CAAC,wBAAAG,GAAA,GAADH,CAAC,CAAG,CAAC,CAAC,cAAAG,GAAA,uBAANA,GAAA,CAAS,CAAC,CAAC;YACxB,IAAIF,OAAO,CAACG,OAAO,CAACT,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;cAChC,MAAM,IAAIU,0CAA8B,CAACV,IAAI,CAAC;YAChD;UACF;UACA,OAAOW,OAAO,CAAC3D,GAAG,CAAC,GAAGqD,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC;MAEF7D,MAAM,CAACoE,gBAAgB,CAACT,OAAO,EAAE;QAC/BU,GAAG,EAAE;UACH3D,KAAKA,CAAC,GAAG4D,IAAO,EAAE;YAChB,IAAI,CAACC,IAAI,CAACD,IAAI,CAAC;YACf,OAAO,IAAI;UACb;QACF,CAAC;QACDE,MAAM,EAAE;UACN9D,KAAKA,CAAC+D,CAAS,EAAE;YACf,IAAI,CAACC,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;YACjB,OAAO,IAAI;UACb;QACF,CAAC;QACDE,IAAI,EAAE;UACJ,MAAMjE,KAAKA,CAAA,EAAG;YACZ;YACA,MAAMkE,OAAO,GAAGjB,OAAO,CAACkB,GAAG,CAAC,CAAC,CAACC,CAAC,EAAE,GAAGjB,CAAC,CAAM,EAAEY,CAAM,KAAK;cACtD,IAAI;gBACF,MAAMnB,MAAM,GAAG,IAAIC,cAAM,CAACG,GAAG,CAACT,IAAI,EAAE;kBAClC,GAAGS,GAAG,CAACqB,aAAa,CAACD,CAAC,CAAC;kBACvBtB,IAAI,EAAEsB;gBACR,CAAC,CAAC;gBACF,OAAOxB,MAAM,CAAC0B,UAAU,CAAC,GAAGnB,CAAC,CAAC;cAChC,CAAC,CAAC,OAAOoB,GAAG,EAAE;gBACZ,MAAM,IAAIC,mCAAuB,CAACT,CAAC,EAAGQ,GAAG,CAAWE,OAAO,CAAC;cAC9D;YACF,CAAC,CAAC;YAEF,MAAMC,UAAU,GAAG,IAAIC,wBAAe,CAAC,CAAC;YACxC,MAAMC,MAAM,GAAGF,UAAU,CAACE,MAAqB;YAE/C,MAAMC,OAAO,GAAGC,UAAU,CACxB,MAAMJ,UAAU,CAACK,KAAK,CAAC,CAAC,EACxBrD,qBAAA,CAAAsB,GAAG,EAAAf,OAAA,EAAS4C,OACd,CAAC;YAED,MAAMG,QAAQ,GAAG,MAAMtD,qBAAA,CAAAsB,GAAG,EAAAf,OAAA,EACvBgD,KAAK,CAACvD,qBAAA,CAAAsB,GAAG,EAAAd,KAAA,EAAOO,GAAG,EAAE;cACpBG,MAAM,EAAE,MAAM;cACdsC,OAAO,EAAE;gBAAE,cAAc,EAAE;cAAmB,CAAC;cAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,OAAO,CAAC;cAC7BU;YACF,CAAC,CAAC,CACDU,IAAI,CAAExE,GAAG,IAAKA,GAAG,CAACyE,IAAI,CAAC,CAAC,CAAC;YAE5BC,YAAY,CAACX,OAAO,CAAC;YAErB,OAAOG,QAAQ,CAACb,GAAG,CAAC,CAACrD,GAAQ,EAAEiD,CAAS,KAAK;cAAA,IAAA0B,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;cAC3C,IAAI7E,GAAG,CAAC8E,EAAE,KAAK1B,OAAO,CAACH,CAAC,CAAC,CAAC6B,EAAE,EAAE;gBAC5B,OAAO,IAAIC,wCAA4B,CAAC9B,CAAC,EAAEG,OAAO,CAACH,CAAC,CAAC,CAAC6B,EAAE,EAAE9E,GAAG,CAAC8E,EAAE,CAAC;cACnE;cACA,QAAAH,qBAAA,IAAAC,sBAAA,GACE,CAAAC,sBAAA,GAAA3C,GAAG,CAACqB,aAAa,CAACpB,OAAO,CAACc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC+B,gBAAgB,cAAAJ,sBAAA,uBAAjDA,sBAAA,CAAA9F,IAAA,CAAA+F,sBAAA,EAAoD7E,GAAG,CAACiF,MAAM,CAAC,cAAAN,qBAAA,cAAAA,qBAAA,GAC/D3E,GAAG,CAACiF,MAAM;YAEd,CAAC,CAAC;UACJ;QACF;MACF,CAAC,CAAC;MACF;MACAhD,MAAM,CAACiD,OAAO,CAAE7C,CAAM,IAAKF,OAAO,CAACY,IAAI,CAACV,CAAC,CAAC,CAAC;MAE3C,OAAOF,OAAO;IAKhB,CAAC;IAtIC,IAAI,CAACgD,OAAO,CAAC;MAAExD;IAAI,CAAC,CAAC;IACrB,MAAM;MAAEoC,OAAO,EAAPA,QAAO,GAAG,KAAK;MAAEI,KAAK,GAAGiB;IAAO,CAAC,GAAGxD,QAAM;IAClDrB,qBAAA,KAAI,EAAAY,OAAA,EAAW;MAAE4C,OAAO,EAAPA,QAAO;MAAEI;IAAM,CAAC;IAEjC3F,MAAM,CAACoE,gBAAgB,CAAC,IAAI,EAAE;MAC5ByC,SAAS,EAAE;QACTnG,KAAK,EAAE,IAAI,CAACmG,SAAS;QACrBjG,UAAU,EAAE,KAAK;QACjBE,QAAQ,EAAE,KAAK;QACfD,YAAY,EAAE;MAChB,CAAC;MACD8F,OAAO,EAAE;QACPjG,KAAK,EAAE,IAAI,CAACiG,OAAO;QACnB/F,UAAU,EAAE,KAAK;QACjBE,QAAQ,EAAE,KAAK;QACfD,YAAY,EAAE;MAChB;MACA;IACF,CAAC,CAAC;;IAEFb,MAAM,CAAC+D,IAAI,CAAC,IAAI,CAACgB,aAAa,CAAC,CAAC2B,OAAO,CAAElD,IAAI,IAAK;MAChD,IAAI,CAACqD,SAAS,CAAC;QAAErD,IAAI;QAAE,GAAG,IAAI,CAACuB,aAAa,CAACvB,IAAI;MAAE,CAAC,EAAApB,qBAAA,CAAE,IAAI,EAAAO,OAAA,CAAQ,CAAC;IACrE,CAAC,CAAC;EACJ;EAEOgE,OAAOA,CAAC1D,IAAwB,EAAsB;IAC3DjD,MAAM,CAAC8G,MAAM,CAAC,IAAI,CAAC7D,IAAI,EAAEA,IAAI,CAAC;IAC9B,OAAO,IAAI,CAACA,IAAI;EAClB;AA2GF;AAACR,OAAA,CAAAsE,GAAA,GAAAtE,OAAA,CAAAM,MAAA,GAAAA,MAAA"}