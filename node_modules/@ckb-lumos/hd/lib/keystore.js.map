{"version":3,"file":"keystore.js","names":["_crypto","_interopRequireDefault","require","_sha","_uuid","_extended_key","_scryptJs","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","UnsupportedCipher","Error","constructor","exports","IncorrectPassword","InvalidKeystore","CIPHER","CKB_CLI_ORIGIN","Keystore","theCrypto","id","origin","crypto","fromJson","json","object","JSON","parse","load","path","fs","readFileSync","save","dir","name","filename","overwrite","Path","join","existsSync","writeFileSync","toJson","stringify","isFromCkbCli","createEmpty","salt","randomBytes","iv","kdfparams","dklen","toString","n","r","p","ciphertext","cipherparams","cipher","kdf","mac","uuid","create","extendedPrivateKey","password","options","derivedKey","Buffer","from","syncScrypt","createCipheriv","slice","concat","update","serialize","final","isEmpty","decrypt","decipher","createDecipheriv","ExtendedPrivateKey","checkPassword","Keccak","digest","scryptOptions","N","maxmem"],"sources":["../src/keystore.ts"],"sourcesContent":["import crypto from \"crypto\";\nimport { Keccak } from \"sha3\";\nimport { v4 as uuid } from \"uuid\";\nimport { ExtendedPrivateKey } from \"./extended_key\";\nimport { HexString } from \"@ckb-lumos/base\";\nimport { syncScrypt } from \"scrypt-js\";\n\nexport type HexStringWithoutPrefix = string;\n\nexport class UnsupportedCipher extends Error {\n  constructor() {\n    super(\"Unsupported cipher!\");\n  }\n}\n\nexport class IncorrectPassword extends Error {\n  constructor() {\n    super(\"Incorrect password!\");\n  }\n}\n\nexport class InvalidKeystore extends Error {\n  constructor() {\n    super(\"Invalid keystore, please check your file integrity.\");\n  }\n}\n\nconst CIPHER = \"aes-128-ctr\";\nconst CKB_CLI_ORIGIN = \"ckb-cli\";\n\ninterface CipherParams {\n  iv: HexStringWithoutPrefix;\n}\n\ninterface KdfParams {\n  dklen: number;\n  n: number;\n  r: number;\n  p: number;\n  salt: HexStringWithoutPrefix;\n}\n\ninterface Crypto {\n  cipher: string;\n  cipherparams: CipherParams;\n  ciphertext: HexStringWithoutPrefix;\n  kdf: string;\n  kdfparams: KdfParams;\n  mac: HexStringWithoutPrefix;\n}\n\n// Encrypt and save master extended private key.\nexport default class Keystore {\n  crypto: Crypto;\n  id: string;\n  version = 3;\n  origin: string | undefined;\n\n  constructor(theCrypto: Crypto, id: string, origin?: string) {\n    this.crypto = theCrypto;\n    this.id = id;\n    this.origin = origin;\n  }\n\n  static fromJson(json: string): Keystore {\n    try {\n      const object = JSON.parse(json);\n      return new Keystore(object.crypto, object.id, object.origin);\n    } catch {\n      throw new InvalidKeystore();\n    }\n  }\n\n  /**\n   * @deprecated\n   * Load keystore file from path.\n   *\n   * @param path\n   */\n  static load(path: string): Keystore {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const fs = require(\"fs\");\n    const json = fs.readFileSync(path, \"utf-8\");\n    return this.fromJson(json);\n  }\n\n  /**\n   * @deprecated\n   * Keystore file default name is `${id}.json`.\n   *\n   * @param dir\n   * @param options If you are sure to overwrite existing keystore file, set `overwrite` to true.\n   */\n  save(\n    dir: string,\n    {\n      name = this.filename(),\n      overwrite = false,\n    }: { name?: string; overwrite?: boolean } = {}\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const fs = require(\"fs\");\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const Path = require(\"path\");\n    const path: string = Path.join(dir, name);\n    if (!overwrite && fs.existsSync(path)) {\n      throw new Error(\"Keystore file already exists!\");\n    }\n    fs.writeFileSync(path, this.toJson());\n  }\n\n  private filename(): string {\n    return this.id + \".json\";\n  }\n\n  toJson(): string {\n    return JSON.stringify(this);\n  }\n\n  isFromCkbCli(): boolean {\n    return this.origin === CKB_CLI_ORIGIN;\n  }\n\n  // Create an empty keystore object that contains empty private key\n  static createEmpty(): Keystore {\n    const salt: Buffer = crypto.randomBytes(32);\n    const iv: Buffer = crypto.randomBytes(16);\n    const kdfparams: KdfParams = {\n      dklen: 32,\n      salt: salt.toString(\"hex\"),\n      n: 2 ** 18,\n      r: 8,\n      p: 1,\n    };\n    return new Keystore(\n      {\n        ciphertext: \"\",\n        cipherparams: {\n          iv: iv.toString(\"hex\"),\n        },\n        cipher: CIPHER,\n        kdf: \"scrypt\",\n        kdfparams,\n        mac: \"\",\n      },\n      uuid()\n    );\n  }\n\n  static create(\n    extendedPrivateKey: ExtendedPrivateKey,\n    password: string,\n    options: { salt?: Buffer; iv?: Buffer } = {}\n  ): Keystore {\n    const salt: Buffer = options.salt || crypto.randomBytes(32);\n    const iv: Buffer = options.iv || crypto.randomBytes(16);\n    const kdfparams: KdfParams = {\n      dklen: 32,\n      salt: salt.toString(\"hex\"),\n      n: 2 ** 18,\n      r: 8,\n      p: 1,\n    };\n    const derivedKey: Buffer = Buffer.from(\n      syncScrypt(\n        Buffer.from(password),\n        salt,\n        kdfparams.n,\n        kdfparams.r,\n        kdfparams.p,\n        kdfparams.dklen\n      )\n    );\n\n    const cipher: crypto.Cipher = crypto.createCipheriv(\n      CIPHER,\n      derivedKey.slice(0, 16),\n      iv\n    );\n    if (!cipher) {\n      throw new UnsupportedCipher();\n    }\n    const ciphertext: Buffer = Buffer.concat([\n      cipher.update(\n        Buffer.from(extendedPrivateKey.serialize().slice(2), \"hex\")\n      ),\n      cipher.final(),\n    ]);\n\n    return new Keystore(\n      {\n        ciphertext: ciphertext.toString(\"hex\"),\n        cipherparams: {\n          iv: iv.toString(\"hex\"),\n        },\n        cipher: CIPHER,\n        kdf: \"scrypt\",\n        kdfparams,\n        mac: Keystore.mac(derivedKey, ciphertext),\n      },\n      uuid()\n    );\n  }\n\n  // Imported from xpub with empty private key.\n  isEmpty(): boolean {\n    return this.crypto.ciphertext === \"\" && this.crypto.mac === \"\";\n  }\n\n  // Decrypt and return serialized extended private key.\n  decrypt(password: string): HexString {\n    const derivedKey = this.derivedKey(password);\n    const ciphertext = Buffer.from(this.crypto.ciphertext, \"hex\");\n    if (Keystore.mac(derivedKey, ciphertext) !== this.crypto.mac) {\n      throw new IncorrectPassword();\n    }\n    const decipher = crypto.createDecipheriv(\n      this.crypto.cipher,\n      derivedKey.slice(0, 16),\n      Buffer.from(this.crypto.cipherparams.iv, \"hex\")\n    );\n    return (\n      \"0x\" +\n      Buffer.concat([decipher.update(ciphertext), decipher.final()]).toString(\n        \"hex\"\n      )\n    );\n  }\n\n  extendedPrivateKey(password: string): ExtendedPrivateKey {\n    return ExtendedPrivateKey.parse(this.decrypt(password));\n  }\n\n  checkPassword(password: string): boolean {\n    const derivedKey = this.derivedKey(password);\n    const ciphertext = Buffer.from(this.crypto.ciphertext, \"hex\");\n    return Keystore.mac(derivedKey, ciphertext) === this.crypto.mac;\n  }\n\n  derivedKey(password: string): Buffer {\n    const { kdfparams } = this.crypto;\n    return Buffer.from(\n      syncScrypt(\n        Buffer.from(password),\n        Buffer.from(kdfparams.salt, \"hex\"),\n        kdfparams.n,\n        kdfparams.r,\n        kdfparams.p,\n        kdfparams.dklen\n      )\n    );\n  }\n\n  static mac(derivedKey: Buffer, ciphertext: Buffer): HexStringWithoutPrefix {\n    return new Keccak(256)\n      .update(Buffer.concat([derivedKey.slice(16, 32), ciphertext]))\n      .digest(\"hex\");\n  }\n\n  static scryptOptions(kdfparams: KdfParams): crypto.ScryptOptions {\n    return {\n      N: kdfparams.n,\n      r: kdfparams.r,\n      p: kdfparams.p,\n      maxmem: 128 * (kdfparams.n + kdfparams.p + 2) * kdfparams.r,\n    };\n  }\n}\n"],"mappings":"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"}