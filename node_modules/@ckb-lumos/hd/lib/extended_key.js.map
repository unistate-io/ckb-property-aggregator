{"version":3,"file":"extended_key.js","names":["_keychain","_interopRequireDefault","require","_key","_interopRequireWildcard","_base","_helper","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","AddressType","exports","ExtendedPublicKey","constructor","publicKey","chainCode","assertPublicKey","assertChainCode","serialize","slice","parse","serialized","utils","assertHexString","AccountExtendedPublicKey","publicKeyInfo","type","index","getPublicKey","blake160","publicKeyToBlake160","path","pathFor","pathForReceiving","Receiving","pathForChange","Change","ckbAccountPath","keychain","Keychain","fromPublicKey","Buffer","from","deriveChild","toString","ExtendedPrivateKey","privateKey","assertPrivateKey","toExtendedPublicKey","privateToPublic","toAccountExtendedPublicKey","masterKeychain","accountKeychain","derivePath","fromSeed","seed","privateKeyInfo","privateKeyInfoByPath","privateKeyInfoFromKeychain"],"sources":["../src/extended_key.ts"],"sourcesContent":["import Keychain from \"./keychain\";\nimport key, { privateToPublic } from \"./key\";\nimport { utils, HexString } from \"@ckb-lumos/base\";\nimport { assertPublicKey, assertChainCode, assertPrivateKey } from \"./helper\";\n\nexport enum AddressType {\n  Receiving = 0,\n  Change = 1,\n}\n\nexport interface PublicKeyInfo {\n  blake160: HexString;\n  path: string;\n  publicKey: HexString;\n}\n\nexport class ExtendedPublicKey {\n  publicKey: HexString;\n  chainCode: HexString;\n\n  constructor(publicKey: HexString, chainCode: HexString) {\n    assertPublicKey(publicKey);\n    assertChainCode(chainCode);\n\n    this.publicKey = publicKey;\n    this.chainCode = chainCode;\n  }\n\n  serialize(): HexString {\n    return this.publicKey + this.chainCode.slice(2);\n  }\n\n  static parse(serialized: HexString): ExtendedPublicKey {\n    utils.assertHexString(\"serialized\", serialized);\n    return new ExtendedPublicKey(\n      serialized.slice(0, 68),\n      \"0x\" + serialized.slice(68)\n    );\n  }\n}\n\n// Extended public key of the BIP44 path down to account level,\n// which is `m/44'/309'/0'`. This key will be persisted to wallet\n// and used to derive receiving/change addresses.\nexport class AccountExtendedPublicKey extends ExtendedPublicKey {\n  public static ckbAccountPath = `m/44'/309'/0'`;\n\n  static parse(serialized: HexString): AccountExtendedPublicKey {\n    utils.assertHexString(\"serialized\", serialized);\n    return new AccountExtendedPublicKey(\n      serialized.slice(0, 68),\n      \"0x\" + serialized.slice(68)\n    );\n  }\n\n  publicKeyInfo(type: AddressType, index: number): PublicKeyInfo {\n    const publicKey: string = this.getPublicKey(type, index);\n    const blake160: string = key.publicKeyToBlake160(publicKey);\n    return {\n      publicKey,\n      blake160,\n      path: AccountExtendedPublicKey.pathFor(type, index),\n    };\n  }\n\n  public static pathForReceiving(index: number) {\n    return AccountExtendedPublicKey.pathFor(AddressType.Receiving, index);\n  }\n\n  public static pathForChange(index: number) {\n    return AccountExtendedPublicKey.pathFor(AddressType.Change, index);\n  }\n\n  public static pathFor(type: AddressType, index: number): string {\n    return `${AccountExtendedPublicKey.ckbAccountPath}/${type}/${index}`;\n  }\n\n  private getPublicKey(type = AddressType.Receiving, index: number): HexString {\n    const keychain = Keychain.fromPublicKey(\n      Buffer.from(this.publicKey.slice(2), \"hex\"),\n      Buffer.from(this.chainCode.slice(2), \"hex\"),\n      AccountExtendedPublicKey.ckbAccountPath\n    )\n      .deriveChild(type, false)\n      .deriveChild(index, false);\n\n    return \"0x\" + keychain.publicKey.toString(\"hex\");\n  }\n}\n\nexport interface PrivateKeyInfo {\n  privateKey: HexString;\n  publicKey: HexString;\n  path: string;\n}\n\nexport class ExtendedPrivateKey {\n  privateKey: HexString;\n  chainCode: HexString;\n\n  constructor(privateKey: HexString, chainCode: HexString) {\n    assertPrivateKey(privateKey);\n    assertChainCode(chainCode);\n\n    this.privateKey = privateKey;\n    this.chainCode = chainCode;\n  }\n\n  serialize(): HexString {\n    return this.privateKey + this.chainCode.slice(2);\n  }\n\n  toExtendedPublicKey(): ExtendedPublicKey {\n    const publicKey: HexString = privateToPublic(this.privateKey);\n    return new ExtendedPublicKey(publicKey, this.chainCode);\n  }\n\n  toAccountExtendedPublicKey(): AccountExtendedPublicKey {\n    const masterKeychain = new Keychain(\n      Buffer.from(this.privateKey.slice(2), \"hex\"),\n      Buffer.from(this.chainCode.slice(2), \"hex\")\n    );\n    const accountKeychain = masterKeychain.derivePath(\n      AccountExtendedPublicKey.ckbAccountPath\n    );\n\n    return new AccountExtendedPublicKey(\n      \"0x\" + accountKeychain.publicKey.toString(\"hex\"),\n      \"0x\" + accountKeychain.chainCode.toString(\"hex\")\n    );\n  }\n\n  static fromSeed(seed: Buffer): ExtendedPrivateKey {\n    const keychain = Keychain.fromSeed(seed);\n    return new ExtendedPrivateKey(\n      \"0x\" + keychain.privateKey.toString(\"hex\"),\n      \"0x\" + keychain.chainCode.toString(\"hex\")\n    );\n  }\n\n  privateKeyInfo(type: AddressType, index: number): PrivateKeyInfo {\n    const path = AccountExtendedPublicKey.pathFor(type, index);\n    return this.privateKeyInfoByPath(path);\n  }\n\n  privateKeyInfoByPath(path: string): PrivateKeyInfo {\n    const keychain = new Keychain(\n      Buffer.from(this.privateKey.slice(2), \"hex\"),\n      Buffer.from(this.chainCode.slice(2), \"hex\")\n    ).derivePath(path);\n\n    return this.privateKeyInfoFromKeychain(keychain, path);\n  }\n\n  private privateKeyInfoFromKeychain(\n    keychain: Keychain,\n    path: string\n  ): PrivateKeyInfo {\n    return {\n      privateKey: \"0x\" + keychain.privateKey.toString(\"hex\"),\n      publicKey: \"0x\" + keychain.publicKey.toString(\"hex\"),\n      path: path,\n    };\n  }\n\n  static parse(serialized: HexString): ExtendedPrivateKey {\n    utils.assertHexString(\"serialized\", serialized);\n    return new ExtendedPrivateKey(\n      serialized.slice(0, 66),\n      \"0x\" + serialized.slice(66)\n    );\n  }\n}\n"],"mappings":"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"}