{"version":3,"file":"resultFormatter.js","names":["toTip","tip","blockHash","block_hash","blockNumber","block_number","exports","toScript","data","codeHash","code_hash","hashType","hash_type","args","toOutPoint","txHash","tx_hash","index","toCellOutPut","lock","type","undefined","toSearchFilter","script","outputDataLenRange","output_data_len_range","outputCapacityRange","output_capacity_range","scriptLenRange","script_len_range","blockRange","block_range","toSearchKey","scriptType","script_type","filter","scriptSearchMode","script_search_mode"],"sources":["../src/resultFormatter.ts"],"sourcesContent":["import { OutPoint, Script } from \"@ckb-lumos/base\";\nimport type * as IndexerType from \"./indexerType\";\nimport type * as RPCType from \"./rpcType\";\nimport { SearchFilter, SearchKey } from \"./type\";\n\nconst toTip = (tip: RPCType.Tip): IndexerType.Tip => ({\n  blockHash: tip.block_hash,\n  blockNumber: tip.block_number,\n});\nconst toScript = (data: RPCType.Script): Script => ({\n  codeHash: data.code_hash,\n  hashType: data.hash_type,\n  args: data.args,\n});\nconst toOutPoint = (data: RPCType.OutPoint): OutPoint => ({\n  txHash: data.tx_hash,\n  index: data.index,\n});\nconst toCellOutPut = (data: RPCType.CellOutput): IndexerType.CellOutput => ({\n  ...data,\n  lock: toScript(data.lock),\n  type: data.type ? toScript(data.type) : undefined,\n});\n\nconst toSearchFilter = (data: RPCType.SearchFilter): SearchFilter => {\n  return {\n    script: data.script ? toScript(data.script) : data.script,\n    outputDataLenRange: data.output_data_len_range,\n    outputCapacityRange: data.output_capacity_range,\n    scriptLenRange: data.script_len_range,\n    blockRange: data.block_range,\n  };\n};\n\nconst toSearchKey = (data: RPCType.SearchKey): SearchKey => ({\n  script: toScript(data.script),\n  scriptType: data.script_type,\n  filter: data.filter ? toSearchFilter(data.filter) : data.filter,\n  scriptSearchMode: data.script_search_mode,\n});\n\nexport {\n  toTip,\n  toScript,\n  toOutPoint,\n  toCellOutPut,\n  toSearchKey,\n  toSearchFilter,\n};\n"],"mappings":";;;;;;AAKA,MAAMA,KAAK,GAAIC,GAAgB,KAAuB;EACpDC,SAAS,EAAED,GAAG,CAACE,UAAU;EACzBC,WAAW,EAAEH,GAAG,CAACI;AACnB,CAAC,CAAC;AAACC,OAAA,CAAAN,KAAA,GAAAA,KAAA;AACH,MAAMO,QAAQ,GAAIC,IAAoB,KAAc;EAClDC,QAAQ,EAAED,IAAI,CAACE,SAAS;EACxBC,QAAQ,EAAEH,IAAI,CAACI,SAAS;EACxBC,IAAI,EAAEL,IAAI,CAACK;AACb,CAAC,CAAC;AAACP,OAAA,CAAAC,QAAA,GAAAA,QAAA;AACH,MAAMO,UAAU,GAAIN,IAAsB,KAAgB;EACxDO,MAAM,EAAEP,IAAI,CAACQ,OAAO;EACpBC,KAAK,EAAET,IAAI,CAACS;AACd,CAAC,CAAC;AAACX,OAAA,CAAAQ,UAAA,GAAAA,UAAA;AACH,MAAMI,YAAY,GAAIV,IAAwB,KAA8B;EAC1E,GAAGA,IAAI;EACPW,IAAI,EAAEZ,QAAQ,CAACC,IAAI,CAACW,IAAI,CAAC;EACzBC,IAAI,EAAEZ,IAAI,CAACY,IAAI,GAAGb,QAAQ,CAACC,IAAI,CAACY,IAAI,CAAC,GAAGC;AAC1C,CAAC,CAAC;AAACf,OAAA,CAAAY,YAAA,GAAAA,YAAA;AAEH,MAAMI,cAAc,GAAId,IAA0B,IAAmB;EACnE,OAAO;IACLe,MAAM,EAAEf,IAAI,CAACe,MAAM,GAAGhB,QAAQ,CAACC,IAAI,CAACe,MAAM,CAAC,GAAGf,IAAI,CAACe,MAAM;IACzDC,kBAAkB,EAAEhB,IAAI,CAACiB,qBAAqB;IAC9CC,mBAAmB,EAAElB,IAAI,CAACmB,qBAAqB;IAC/CC,cAAc,EAAEpB,IAAI,CAACqB,gBAAgB;IACrCC,UAAU,EAAEtB,IAAI,CAACuB;EACnB,CAAC;AACH,CAAC;AAACzB,OAAA,CAAAgB,cAAA,GAAAA,cAAA;AAEF,MAAMU,WAAW,GAAIxB,IAAuB,KAAiB;EAC3De,MAAM,EAAEhB,QAAQ,CAACC,IAAI,CAACe,MAAM,CAAC;EAC7BU,UAAU,EAAEzB,IAAI,CAAC0B,WAAW;EAC5BC,MAAM,EAAE3B,IAAI,CAAC2B,MAAM,GAAGb,cAAc,CAACd,IAAI,CAAC2B,MAAM,CAAC,GAAG3B,IAAI,CAAC2B,MAAM;EAC/DC,gBAAgB,EAAE5B,IAAI,CAAC6B;AACzB,CAAC,CAAC;AAAC/B,OAAA,CAAA0B,WAAA,GAAAA,WAAA"}