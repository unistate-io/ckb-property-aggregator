{"version":3,"file":"services.js","names":["_base","require","_crossFetch","_interopRequireDefault","_bi","_paramsFormatter","_resultFormatter","_ckbIndexerFilter","_rpc","obj","__esModule","default","generateSearchKey","queries","script","undefined","filter","script_type","script_search_mode","lock","unwrapScriptWrapper","toScript","type","block_range","fromBlock","toBlock","BI","from","add","toString","outputDataLenRange","output_data_len_range","outputCapacityRange","output_capacity_range","scriptLenRange","script_len_range","scriptSearchMode","Error","toSearchKey","exports","getHexStringBytes","hexString","utils","assertHexString","Math","ceil","substr","length","id","requestBatch","rpcUrl","data","res","fetch","method","headers","body","JSON","stringify","map","item","status","result","json","error","requestBatchTransactionWithStatus","txHashes","requestBody","txHash","index","jsonrpc","params","ResultFormatter","toTransactionWithStatus"],"sources":["../src/services.ts"],"sourcesContent":["import { utils, HexString } from \"@ckb-lumos/base\";\nimport { CKBIndexerQueryOptions, SearchKey } from \"./type\";\nimport fetch from \"cross-fetch\";\nimport { BI } from \"@ckb-lumos/bi\";\nimport { toScript } from \"./paramsFormatter\";\nimport type * as RPCType from \"./rpcType\";\nimport { toSearchKey } from \"./resultFormatter\";\nimport { unwrapScriptWrapper } from \"./ckbIndexerFilter\";\nimport { ResultFormatter } from \"@ckb-lumos/rpc\";\nimport { RPC as RpcTypes } from \"@ckb-lumos/rpc/lib/types/rpc\";\nimport { CKBComponents } from \"@ckb-lumos/rpc/lib/types/api\";\n\nconst generateSearchKey = (queries: CKBIndexerQueryOptions): SearchKey => {\n  let script: RPCType.Script | undefined = undefined;\n  const filter: RPCType.SearchFilter = {};\n  let script_type: RPCType.ScriptType | undefined = undefined;\n  let script_search_mode: RPCType.ScriptSearchMode = \"prefix\";\n  if (queries.lock) {\n    const lock = unwrapScriptWrapper(queries.lock);\n    script = toScript(lock);\n    script_type = \"lock\";\n    if (queries.type && typeof queries.type !== \"string\") {\n      const type = unwrapScriptWrapper(queries.type);\n      filter.script = toScript(type);\n    }\n  } else if (queries.type && typeof queries.type !== \"string\") {\n    const type = unwrapScriptWrapper(queries.type);\n    script = toScript(type);\n    script_type = \"type\";\n  }\n  let block_range: RPCType.HexadecimalRange | null = null;\n  if (queries.fromBlock && queries.toBlock) {\n    //toBlock+1 cause toBlock need to be included\n    block_range = [\n      queries.fromBlock,\n      `0x${BI.from(queries.toBlock).add(1).toString(16)}`,\n    ];\n  }\n  if (block_range) {\n    filter.block_range = block_range;\n  }\n  if (queries.outputDataLenRange) {\n    filter.output_data_len_range = queries.outputDataLenRange;\n  }\n  if (queries.outputCapacityRange) {\n    filter.output_capacity_range = queries.outputCapacityRange;\n  }\n  if (queries.scriptLenRange) {\n    filter.script_len_range = queries.scriptLenRange;\n  }\n  if (queries.scriptSearchMode) {\n    script_search_mode = queries.scriptSearchMode;\n  }\n  if (!script) {\n    throw new Error(\"Either lock or type script must be provided!\");\n  }\n  if (!script_type) {\n    throw new Error(\"script_type must be provided\");\n  }\n  return toSearchKey({\n    script,\n    script_type,\n    filter,\n    script_search_mode,\n  });\n};\n\nconst getHexStringBytes = (hexString: HexString): number => {\n  utils.assertHexString(\"\", hexString);\n  return Math.ceil(hexString.substr(2).length / 2);\n};\n\nlet id = 0;\n// will be tested in e2e\n/* c8 ignore next 25 */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function requestBatch<T = any>(\n  rpcUrl: string,\n  // eslint-disable-next-line\n  data: Record<string, unknown>[]\n): Promise<{ result: T; jsonrpc: string; id: number | string }[]> {\n  if (!data.length) {\n    return [];\n  }\n\n  const res = await fetch(rpcUrl, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(data.map((item) => ({ id: id++, ...item }))),\n  });\n  if (res.status !== 200) {\n    throw new Error(`Indexer request failed with HTTP code ${res.status}`);\n  }\n  const result = await res.json();\n  if (result.error !== undefined) {\n    throw new Error(\n      `indexer request rpc failed with error: ${JSON.stringify(result.error)}`\n    );\n  }\n  return result;\n}\n\n/* c8 ignore next 23 */\nasync function requestBatchTransactionWithStatus(\n  rpcUrl: string,\n  txHashes: string[]\n): Promise<CKBComponents.TransactionWithStatus[]> {\n  if (txHashes.length === 0) {\n    return [];\n  }\n  const requestBody = txHashes.map((txHash, index) => {\n    return {\n      id: index,\n      jsonrpc: \"2.0\",\n      method: \"get_transaction\",\n      params: [txHash],\n    };\n  });\n\n  const res = await requestBatch<RpcTypes.TransactionWithStatus>(\n    rpcUrl,\n    requestBody\n  );\n  return res.map((item) =>\n    ResultFormatter.toTransactionWithStatus(item.result)\n  );\n}\n\nexport {\n  generateSearchKey,\n  getHexStringBytes,\n  requestBatch,\n  requestBatchTransactionWithStatus,\n};\n"],"mappings":"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"}