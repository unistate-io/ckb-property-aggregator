{"version":3,"file":"ckbIndexerFilter.js","names":["_base","require","_codec","_bi","convertQueryOptionToLumosSearchKey","queryOptions","searchKeyLock","searchKeyType","searchKey","queryLock","lock","queryType","type","instanceOfScriptWrapper","script","scriptType","scriptSearchMode","searchMode","filter","Error","outputDataLenRange","outputCapacityRange","scriptLenRange","filterByLumosQueryOptions","cells","options","filteredCells","cell","filterByLumosSearchKey","argsLen","bytes","bytify","cellOutput","args","length","data","instanceOfDataWithSearchMode","dataSearch","equal","expectPrefix","actualPrefix","slice","isExactMode","blockchain","Script","pack","checkScriptWithPrefixMode","checkScriptLenRange","capacity","BI","from","fromCapacity","toCapacity","lt","gte","dataLen","fromDataLen","toDataLen","filterScript","codeHash","expectArgsPrefix","actualArgsPrefix","hashType","scriptLen","concat","fromScriptLen","toScriptLen","object","unwrapScriptWrapper","inputScript","exports","unwrapDataWrapper","input"],"sources":["../src/ckbIndexerFilter.ts"],"sourcesContent":["import {\n  Cell,\n  DataWithSearchMode,\n  HexadecimalRange,\n  Script,\n  ScriptWrapper,\n  blockchain,\n} from \"@ckb-lumos/base\";\nimport { CKBIndexerQueryOptions, SearchFilter, SearchKey } from \"./type\";\nimport { bytes } from \"@ckb-lumos/codec\";\nimport { BI } from \"@ckb-lumos/bi\";\n\n/**\n * @description the following fields are not supported:\n * 1. `fromBlock` pending cells don't have block number\n * 2. `toBlock` pending cells don't have block number\n * 3. `skip` not search key, shoule be implmented in cell collector\n * 4. `order` not search key, shoule be implmented in cell collector\n */\ntype LumosQueryOptions = Pick<\n  CKBIndexerQueryOptions,\n  | \"lock\"\n  | \"type\"\n  | \"data\"\n  | \"argsLen\"\n  | \"outputDataLenRange\"\n  | \"outputCapacityRange\"\n  | \"scriptLenRange\"\n>;\n\n/**\n * @description `blockRange` is not supported, because pending cells don't have block number\n */\ntype LumosSearchFilter = Pick<\n  SearchFilter,\n  \"script\" | \"scriptLenRange\" | \"outputCapacityRange\" | \"outputDataLenRange\"\n>;\n\ntype LumosSearchKey = Pick<\n  SearchKey,\n  \"script\" | \"scriptType\" | \"scriptSearchMode\"\n> & { filter?: LumosSearchFilter };\n\nfunction convertQueryOptionToLumosSearchKey(\n  queryOptions: LumosQueryOptions\n): LumosSearchKey {\n  let searchKeyLock: Script | undefined;\n  let searchKeyType: Script | undefined;\n  let searchKey: Required<SearchKey>;\n\n  const queryLock = queryOptions.lock;\n  const queryType = queryOptions.type;\n  if (queryLock) {\n    if (instanceOfScriptWrapper(queryLock)) {\n      searchKeyLock = queryLock.script;\n    } else {\n      searchKeyLock = queryLock;\n    }\n  }\n  if (queryType && queryType !== \"empty\") {\n    if (instanceOfScriptWrapper(queryType)) {\n      searchKeyType = queryType.script;\n    } else {\n      searchKeyType = queryType;\n    }\n  }\n\n  if (searchKeyLock) {\n    searchKey = {\n      script: searchKeyLock,\n      scriptType: \"lock\",\n      scriptSearchMode: instanceOfScriptWrapper(queryLock)\n        ? queryLock.searchMode || \"prefix\"\n        : \"prefix\",\n      filter: {},\n    };\n    searchKeyType && (searchKey.filter.script = searchKeyType);\n  } else if (searchKeyType) {\n    searchKey = {\n      script: searchKeyType,\n      scriptType: \"type\",\n      scriptSearchMode: instanceOfScriptWrapper(queryType)\n        ? queryType.searchMode || \"prefix\"\n        : \"prefix\",\n      filter: {},\n    };\n  } else {\n    throw new Error(\"query.lock and query.type can't be both empty\");\n  }\n\n  const { outputDataLenRange, outputCapacityRange, scriptLenRange } =\n    queryOptions;\n\n  searchKey.filter.outputDataLenRange = outputDataLenRange;\n  searchKey.filter.outputCapacityRange = outputCapacityRange;\n  searchKey.filter.scriptLenRange = scriptLenRange;\n\n  if (queryType === \"empty\") {\n    searchKey.filter.scriptLenRange = [\"0x0\", \"0x1\"];\n  }\n\n  return searchKey;\n}\n\nfunction filterByLumosQueryOptions(\n  cells: Cell[],\n  options: LumosQueryOptions\n): Cell[] {\n  const searchKey = convertQueryOptionToLumosSearchKey(options);\n  let filteredCells = cells.filter((cell) =>\n    filterByLumosSearchKey(cell, searchKey)\n  );\n\n  if (options.argsLen && options.argsLen !== \"any\" && options.argsLen !== -1) {\n    filteredCells = filteredCells.filter(\n      (cell) =>\n        bytes.bytify(cell.cellOutput.lock.args).length === options.argsLen\n    );\n  }\n\n  if (!!options.data && options.data !== \"any\") {\n    if (\n      instanceOfDataWithSearchMode(options.data) &&\n      options.data.searchMode === \"exact\"\n    ) {\n      const dataSearch = options.data as DataWithSearchMode;\n      filteredCells = filteredCells.filter((cell) =>\n        bytes.equal(bytes.bytify(cell.data), bytes.bytify(dataSearch.data))\n      );\n    } else if (\n      instanceOfDataWithSearchMode(options.data) &&\n      options.data.searchMode === \"prefix\"\n    ) {\n      const dataSearch = options.data as DataWithSearchMode;\n      filteredCells = filteredCells.filter((cell) => {\n        const expectPrefix = bytes.bytify(dataSearch.data);\n        const actualPrefix = bytes\n          .bytify(cell.data)\n          .slice(0, expectPrefix.length);\n        return bytes.equal(expectPrefix, actualPrefix);\n      });\n    } else {\n      filteredCells = filteredCells.filter((cell) => {\n        const expectPrefix = bytes.bytify(options.data as string);\n        const actualPrefix = bytes\n          .bytify(cell.data)\n          .slice(0, expectPrefix.length);\n        return bytes.equal(expectPrefix, actualPrefix);\n      });\n    }\n  }\n\n  return filteredCells;\n}\n\n/**\n * @internal\n */\nexport function filterByLumosSearchKey(\n  cell: Cell,\n  searchKey: LumosSearchKey\n): boolean {\n  const isExactMode = searchKey.scriptSearchMode === \"exact\";\n  const { cellOutput } = cell;\n  const { scriptType, script, filter } = searchKey;\n\n  // Search mode\n  if (isExactMode) {\n    if (scriptType === \"lock\") {\n      if (\n        !bytes.equal(\n          blockchain.Script.pack(cellOutput.lock),\n          blockchain.Script.pack(script)\n        )\n      ) {\n        return false;\n      }\n    } else {\n      if (\n        !cellOutput.type ||\n        !bytes.equal(\n          blockchain.Script.pack(cellOutput.type),\n          blockchain.Script.pack(script)\n        )\n      ) {\n        return false;\n      }\n    }\n    // Prefix mode\n  } else {\n    if (scriptType === \"lock\") {\n      if (!checkScriptWithPrefixMode(cellOutput.lock, script)) {\n        return false;\n      }\n    } else {\n      if (!checkScriptWithPrefixMode(cellOutput.type, script)) {\n        return false;\n      }\n    }\n  }\n\n  // the \"exact\" mode works only on \"SearchKey.script\",\n  // not on \"SearchKey.filter.script\"\n  // the \"SearchKey.filter.script\" is always in prefix mode\n  if (!filter) return true;\n  // filter type script if scriptType is \"lock\"\n  if (scriptType === \"lock\") {\n    if (\n      filter.script &&\n      !checkScriptWithPrefixMode(cellOutput.type, filter.script)\n    ) {\n      return false;\n    }\n\n    if (\n      filter.scriptLenRange &&\n      !checkScriptLenRange(cellOutput.type, filter.scriptLenRange)\n    ) {\n      return false;\n    }\n    // filter lock script if scriptType is \"type\"\n  } else {\n    if (\n      filter.script &&\n      !checkScriptWithPrefixMode(cellOutput.lock, filter.script)\n    ) {\n      return false;\n    }\n    if (\n      filter.scriptLenRange &&\n      !checkScriptLenRange(cellOutput.lock, filter.scriptLenRange)\n    ) {\n      return false;\n    }\n  }\n\n  const { outputCapacityRange, outputDataLenRange } = filter;\n\n  if (outputCapacityRange) {\n    const capacity = BI.from(cellOutput.capacity);\n    const fromCapacity = BI.from(outputCapacityRange[0]);\n    const toCapacity = BI.from(outputCapacityRange[1]);\n    if (capacity.lt(fromCapacity) || capacity.gte(toCapacity)) {\n      return false;\n    }\n  }\n\n  if (outputDataLenRange) {\n    const dataLen = BI.from(bytes.bytify(cell.data).length);\n    const fromDataLen = BI.from(outputDataLenRange[0]);\n    const toDataLen = BI.from(outputDataLenRange[1]);\n    if (dataLen.lt(fromDataLen) || dataLen.gte(toDataLen)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction checkScriptWithPrefixMode(\n  script: Script | undefined,\n  filterScript: Script\n): boolean {\n  if (!script) {\n    return false;\n  }\n\n  // codeHash should always be 32 bytes, so it only supports exact match mode\n  if (!bytes.equal(filterScript.codeHash, script.codeHash)) {\n    return false;\n  }\n\n  const expectArgsPrefix = bytes.bytify(filterScript.args);\n  const actualArgsPrefix = bytes\n    .bytify(script.args)\n    .slice(0, expectArgsPrefix.length);\n  if (!bytes.equal(expectArgsPrefix, actualArgsPrefix)) {\n    return false;\n  }\n\n  if (script.hashType !== filterScript.hashType) {\n    return false;\n  }\n  return true;\n}\n\nfunction checkScriptLenRange(\n  script: Script | undefined,\n  scriptLenRange: HexadecimalRange\n): boolean {\n  const scriptLen = script\n    ? BI.from(\n        bytes.concat(script.codeHash, script.args).length +\n          1 /* hashType length is 1 */\n      )\n    : BI.from(0);\n  const fromScriptLen = BI.from(scriptLenRange[0]);\n  const toScriptLen = BI.from(scriptLenRange[1]);\n  if (scriptLen.lt(fromScriptLen) || scriptLen.gte(toScriptLen)) {\n    return false;\n  }\n  return true;\n}\n\nfunction instanceOfScriptWrapper(object: unknown): object is ScriptWrapper {\n  return typeof object === \"object\" && object != null && \"script\" in object;\n}\n\nfunction instanceOfDataWithSearchMode(\n  object: unknown\n): object is DataWithSearchMode {\n  return typeof object === \"object\" && object != null && \"data\" in object;\n}\n\nconst unwrapScriptWrapper = (inputScript: ScriptWrapper | Script): Script => {\n  if (instanceOfScriptWrapper(inputScript)) {\n    return inputScript.script;\n  }\n  return inputScript;\n};\n\nconst unwrapDataWrapper = (input: DataWithSearchMode | string): string => {\n  if (instanceOfDataWithSearchMode(input)) {\n    return input.data;\n  }\n  return input;\n};\n\nexport {\n  filterByLumosQueryOptions,\n  convertQueryOptionToLumosSearchKey,\n  instanceOfDataWithSearchMode,\n  instanceOfScriptWrapper,\n  unwrapScriptWrapper,\n  unwrapDataWrapper,\n};\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AASA,IAAAC,MAAA,GAAAD,OAAA;AACA,IAAAE,GAAA,GAAAF,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAYA;AACA;AACA;;AAWA,SAASG,kCAAkCA,CACzCC,YAA+B,EACf;EAChB,IAAIC,aAAiC;EACrC,IAAIC,aAAiC;EACrC,IAAIC,SAA8B;EAElC,MAAMC,SAAS,GAAGJ,YAAY,CAACK,IAAI;EACnC,MAAMC,SAAS,GAAGN,YAAY,CAACO,IAAI;EACnC,IAAIH,SAAS,EAAE;IACb,IAAII,uBAAuB,CAACJ,SAAS,CAAC,EAAE;MACtCH,aAAa,GAAGG,SAAS,CAACK,MAAM;IAClC,CAAC,MAAM;MACLR,aAAa,GAAGG,SAAS;IAC3B;EACF;EACA,IAAIE,SAAS,IAAIA,SAAS,KAAK,OAAO,EAAE;IACtC,IAAIE,uBAAuB,CAACF,SAAS,CAAC,EAAE;MACtCJ,aAAa,GAAGI,SAAS,CAACG,MAAM;IAClC,CAAC,MAAM;MACLP,aAAa,GAAGI,SAAS;IAC3B;EACF;EAEA,IAAIL,aAAa,EAAE;IACjBE,SAAS,GAAG;MACVM,MAAM,EAAER,aAAa;MACrBS,UAAU,EAAE,MAAM;MAClBC,gBAAgB,EAAEH,uBAAuB,CAACJ,SAAS,CAAC,GAChDA,SAAS,CAACQ,UAAU,IAAI,QAAQ,GAChC,QAAQ;MACZC,MAAM,EAAE,CAAC;IACX,CAAC;IACDX,aAAa,KAAKC,SAAS,CAACU,MAAM,CAACJ,MAAM,GAAGP,aAAa,CAAC;EAC5D,CAAC,MAAM,IAAIA,aAAa,EAAE;IACxBC,SAAS,GAAG;MACVM,MAAM,EAAEP,aAAa;MACrBQ,UAAU,EAAE,MAAM;MAClBC,gBAAgB,EAAEH,uBAAuB,CAACF,SAAS,CAAC,GAChDA,SAAS,CAACM,UAAU,IAAI,QAAQ,GAChC,QAAQ;MACZC,MAAM,EAAE,CAAC;IACX,CAAC;EACH,CAAC,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;EAClE;EAEA,MAAM;IAAEC,kBAAkB;IAAEC,mBAAmB;IAAEC;EAAe,CAAC,GAC/DjB,YAAY;EAEdG,SAAS,CAACU,MAAM,CAACE,kBAAkB,GAAGA,kBAAkB;EACxDZ,SAAS,CAACU,MAAM,CAACG,mBAAmB,GAAGA,mBAAmB;EAC1Db,SAAS,CAACU,MAAM,CAACI,cAAc,GAAGA,cAAc;EAEhD,IAAIX,SAAS,KAAK,OAAO,EAAE;IACzBH,SAAS,CAACU,MAAM,CAACI,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;EAClD;EAEA,OAAOd,SAAS;AAClB;AAEA,SAASe,yBAAyBA,CAChCC,KAAa,EACbC,OAA0B,EAClB;EACR,MAAMjB,SAAS,GAAGJ,kCAAkC,CAACqB,OAAO,CAAC;EAC7D,IAAIC,aAAa,GAAGF,KAAK,CAACN,MAAM,CAAES,IAAI,IACpCC,sBAAsB,CAACD,IAAI,EAAEnB,SAAS,CACxC,CAAC;EAED,IAAIiB,OAAO,CAACI,OAAO,IAAIJ,OAAO,CAACI,OAAO,KAAK,KAAK,IAAIJ,OAAO,CAACI,OAAO,KAAK,CAAC,CAAC,EAAE;IAC1EH,aAAa,GAAGA,aAAa,CAACR,MAAM,CACjCS,IAAI,IACHG,YAAK,CAACC,MAAM,CAACJ,IAAI,CAACK,UAAU,CAACtB,IAAI,CAACuB,IAAI,CAAC,CAACC,MAAM,KAAKT,OAAO,CAACI,OAC/D,CAAC;EACH;EAEA,IAAI,CAAC,CAACJ,OAAO,CAACU,IAAI,IAAIV,OAAO,CAACU,IAAI,KAAK,KAAK,EAAE;IAC5C,IACEC,4BAA4B,CAACX,OAAO,CAACU,IAAI,CAAC,IAC1CV,OAAO,CAACU,IAAI,CAAClB,UAAU,KAAK,OAAO,EACnC;MACA,MAAMoB,UAAU,GAAGZ,OAAO,CAACU,IAA0B;MACrDT,aAAa,GAAGA,aAAa,CAACR,MAAM,CAAES,IAAI,IACxCG,YAAK,CAACQ,KAAK,CAACR,YAAK,CAACC,MAAM,CAACJ,IAAI,CAACQ,IAAI,CAAC,EAAEL,YAAK,CAACC,MAAM,CAACM,UAAU,CAACF,IAAI,CAAC,CACpE,CAAC;IACH,CAAC,MAAM,IACLC,4BAA4B,CAACX,OAAO,CAACU,IAAI,CAAC,IAC1CV,OAAO,CAACU,IAAI,CAAClB,UAAU,KAAK,QAAQ,EACpC;MACA,MAAMoB,UAAU,GAAGZ,OAAO,CAACU,IAA0B;MACrDT,aAAa,GAAGA,aAAa,CAACR,MAAM,CAAES,IAAI,IAAK;QAC7C,MAAMY,YAAY,GAAGT,YAAK,CAACC,MAAM,CAACM,UAAU,CAACF,IAAI,CAAC;QAClD,MAAMK,YAAY,GAAGV,YAAK,CACvBC,MAAM,CAACJ,IAAI,CAACQ,IAAI,CAAC,CACjBM,KAAK,CAAC,CAAC,EAAEF,YAAY,CAACL,MAAM,CAAC;QAChC,OAAOJ,YAAK,CAACQ,KAAK,CAACC,YAAY,EAAEC,YAAY,CAAC;MAChD,CAAC,CAAC;IACJ,CAAC,MAAM;MACLd,aAAa,GAAGA,aAAa,CAACR,MAAM,CAAES,IAAI,IAAK;QAC7C,MAAMY,YAAY,GAAGT,YAAK,CAACC,MAAM,CAACN,OAAO,CAACU,IAAc,CAAC;QACzD,MAAMK,YAAY,GAAGV,YAAK,CACvBC,MAAM,CAACJ,IAAI,CAACQ,IAAI,CAAC,CACjBM,KAAK,CAAC,CAAC,EAAEF,YAAY,CAACL,MAAM,CAAC;QAChC,OAAOJ,YAAK,CAACQ,KAAK,CAACC,YAAY,EAAEC,YAAY,CAAC;MAChD,CAAC,CAAC;IACJ;EACF;EAEA,OAAOd,aAAa;AACtB;;AAEA;AACA;AACA;AACO,SAASE,sBAAsBA,CACpCD,IAAU,EACVnB,SAAyB,EAChB;EACT,MAAMkC,WAAW,GAAGlC,SAAS,CAACQ,gBAAgB,KAAK,OAAO;EAC1D,MAAM;IAAEgB;EAAW,CAAC,GAAGL,IAAI;EAC3B,MAAM;IAAEZ,UAAU;IAAED,MAAM;IAAEI;EAAO,CAAC,GAAGV,SAAS;;EAEhD;EACA,IAAIkC,WAAW,EAAE;IACf,IAAI3B,UAAU,KAAK,MAAM,EAAE;MACzB,IACE,CAACe,YAAK,CAACQ,KAAK,CACVK,gBAAU,CAACC,MAAM,CAACC,IAAI,CAACb,UAAU,CAACtB,IAAI,CAAC,EACvCiC,gBAAU,CAACC,MAAM,CAACC,IAAI,CAAC/B,MAAM,CAC/B,CAAC,EACD;QACA,OAAO,KAAK;MACd;IACF,CAAC,MAAM;MACL,IACE,CAACkB,UAAU,CAACpB,IAAI,IAChB,CAACkB,YAAK,CAACQ,KAAK,CACVK,gBAAU,CAACC,MAAM,CAACC,IAAI,CAACb,UAAU,CAACpB,IAAI,CAAC,EACvC+B,gBAAU,CAACC,MAAM,CAACC,IAAI,CAAC/B,MAAM,CAC/B,CAAC,EACD;QACA,OAAO,KAAK;MACd;IACF;IACA;EACF,CAAC,MAAM;IACL,IAAIC,UAAU,KAAK,MAAM,EAAE;MACzB,IAAI,CAAC+B,yBAAyB,CAACd,UAAU,CAACtB,IAAI,EAAEI,MAAM,CAAC,EAAE;QACvD,OAAO,KAAK;MACd;IACF,CAAC,MAAM;MACL,IAAI,CAACgC,yBAAyB,CAACd,UAAU,CAACpB,IAAI,EAAEE,MAAM,CAAC,EAAE;QACvD,OAAO,KAAK;MACd;IACF;EACF;;EAEA;EACA;EACA;EACA,IAAI,CAACI,MAAM,EAAE,OAAO,IAAI;EACxB;EACA,IAAIH,UAAU,KAAK,MAAM,EAAE;IACzB,IACEG,MAAM,CAACJ,MAAM,IACb,CAACgC,yBAAyB,CAACd,UAAU,CAACpB,IAAI,EAAEM,MAAM,CAACJ,MAAM,CAAC,EAC1D;MACA,OAAO,KAAK;IACd;IAEA,IACEI,MAAM,CAACI,cAAc,IACrB,CAACyB,mBAAmB,CAACf,UAAU,CAACpB,IAAI,EAAEM,MAAM,CAACI,cAAc,CAAC,EAC5D;MACA,OAAO,KAAK;IACd;IACA;EACF,CAAC,MAAM;IACL,IACEJ,MAAM,CAACJ,MAAM,IACb,CAACgC,yBAAyB,CAACd,UAAU,CAACtB,IAAI,EAAEQ,MAAM,CAACJ,MAAM,CAAC,EAC1D;MACA,OAAO,KAAK;IACd;IACA,IACEI,MAAM,CAACI,cAAc,IACrB,CAACyB,mBAAmB,CAACf,UAAU,CAACtB,IAAI,EAAEQ,MAAM,CAACI,cAAc,CAAC,EAC5D;MACA,OAAO,KAAK;IACd;EACF;EAEA,MAAM;IAAED,mBAAmB;IAAED;EAAmB,CAAC,GAAGF,MAAM;EAE1D,IAAIG,mBAAmB,EAAE;IACvB,MAAM2B,QAAQ,GAAGC,MAAE,CAACC,IAAI,CAAClB,UAAU,CAACgB,QAAQ,CAAC;IAC7C,MAAMG,YAAY,GAAGF,MAAE,CAACC,IAAI,CAAC7B,mBAAmB,CAAC,CAAC,CAAC,CAAC;IACpD,MAAM+B,UAAU,GAAGH,MAAE,CAACC,IAAI,CAAC7B,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAClD,IAAI2B,QAAQ,CAACK,EAAE,CAACF,YAAY,CAAC,IAAIH,QAAQ,CAACM,GAAG,CAACF,UAAU,CAAC,EAAE;MACzD,OAAO,KAAK;IACd;EACF;EAEA,IAAIhC,kBAAkB,EAAE;IACtB,MAAMmC,OAAO,GAAGN,MAAE,CAACC,IAAI,CAACpB,YAAK,CAACC,MAAM,CAACJ,IAAI,CAACQ,IAAI,CAAC,CAACD,MAAM,CAAC;IACvD,MAAMsB,WAAW,GAAGP,MAAE,CAACC,IAAI,CAAC9B,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAClD,MAAMqC,SAAS,GAAGR,MAAE,CAACC,IAAI,CAAC9B,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAChD,IAAImC,OAAO,CAACF,EAAE,CAACG,WAAW,CAAC,IAAID,OAAO,CAACD,GAAG,CAACG,SAAS,CAAC,EAAE;MACrD,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb;AAEA,SAASX,yBAAyBA,CAChChC,MAA0B,EAC1B4C,YAAoB,EACX;EACT,IAAI,CAAC5C,MAAM,EAAE;IACX,OAAO,KAAK;EACd;;EAEA;EACA,IAAI,CAACgB,YAAK,CAACQ,KAAK,CAACoB,YAAY,CAACC,QAAQ,EAAE7C,MAAM,CAAC6C,QAAQ,CAAC,EAAE;IACxD,OAAO,KAAK;EACd;EAEA,MAAMC,gBAAgB,GAAG9B,YAAK,CAACC,MAAM,CAAC2B,YAAY,CAACzB,IAAI,CAAC;EACxD,MAAM4B,gBAAgB,GAAG/B,YAAK,CAC3BC,MAAM,CAACjB,MAAM,CAACmB,IAAI,CAAC,CACnBQ,KAAK,CAAC,CAAC,EAAEmB,gBAAgB,CAAC1B,MAAM,CAAC;EACpC,IAAI,CAACJ,YAAK,CAACQ,KAAK,CAACsB,gBAAgB,EAAEC,gBAAgB,CAAC,EAAE;IACpD,OAAO,KAAK;EACd;EAEA,IAAI/C,MAAM,CAACgD,QAAQ,KAAKJ,YAAY,CAACI,QAAQ,EAAE;IAC7C,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb;AAEA,SAASf,mBAAmBA,CAC1BjC,MAA0B,EAC1BQ,cAAgC,EACvB;EACT,MAAMyC,SAAS,GAAGjD,MAAM,GACpBmC,MAAE,CAACC,IAAI,CACLpB,YAAK,CAACkC,MAAM,CAAClD,MAAM,CAAC6C,QAAQ,EAAE7C,MAAM,CAACmB,IAAI,CAAC,CAACC,MAAM,GAC/C,CAAC,CAAC,0BACN,CAAC,GACDe,MAAE,CAACC,IAAI,CAAC,CAAC,CAAC;EACd,MAAMe,aAAa,GAAGhB,MAAE,CAACC,IAAI,CAAC5B,cAAc,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM4C,WAAW,GAAGjB,MAAE,CAACC,IAAI,CAAC5B,cAAc,CAAC,CAAC,CAAC,CAAC;EAC9C,IAAIyC,SAAS,CAACV,EAAE,CAACY,aAAa,CAAC,IAAIF,SAAS,CAACT,GAAG,CAACY,WAAW,CAAC,EAAE;IAC7D,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb;AAEA,SAASrD,uBAAuBA,CAACsD,MAAe,EAA2B;EACzE,OAAO,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,IAAI,IAAI,IAAI,QAAQ,IAAIA,MAAM;AAC3E;AAEA,SAAS/B,4BAA4BA,CACnC+B,MAAe,EACe;EAC9B,OAAO,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,IAAI,IAAI,IAAI,MAAM,IAAIA,MAAM;AACzE;AAEA,MAAMC,mBAAmB,GAAIC,WAAmC,IAAa;EAC3E,IAAIxD,uBAAuB,CAACwD,WAAW,CAAC,EAAE;IACxC,OAAOA,WAAW,CAACvD,MAAM;EAC3B;EACA,OAAOuD,WAAW;AACpB,CAAC;AAACC,OAAA,CAAAF,mBAAA,GAAAA,mBAAA;AAEF,MAAMG,iBAAiB,GAAIC,KAAkC,IAAa;EACxE,IAAIpC,4BAA4B,CAACoC,KAAK,CAAC,EAAE;IACvC,OAAOA,KAAK,CAACrC,IAAI;EACnB;EACA,OAAOqC,KAAK;AACd,CAAC;AAACF,OAAA,CAAAC,iBAAA,GAAAA,iBAAA"}