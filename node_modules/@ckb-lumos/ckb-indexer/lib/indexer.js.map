{"version":3,"file":"indexer.js","names":["_base","require","_services","_collector","_events","_type","_bi","_rpc","_rpc2","_toolkit","_ckbIndexerFilter","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","DefaultTerminator","stop","push","defaultLogger","level","message","console","log","CkbIndexer","constructor","ckbIndexerUrl","ckbRpcUrl","uri","ckbIndexerUri","getCkbRpc","CKBRPC","getIndexerRpc","rpc","getTip","getIndexerTip","CKBIndexerRpc","tip","asyncSleep","timeout","Promise","resolve","setTimeout","waitForSync","blockDifference","rpcTipNumber","parseInt","getTipHeader","number","indexerTipNumber","blockNumber","collector","queries","otherQueryOptions","CKBCellCollector","getCells","searchKey","terminator","searchKeyFilter","TerminableCellAdapter","getTransactions","infos","cursor","lastCursor","sizeLimit","order","toString","txs","objects","concat","length","running","start","startForever","subscribe","isSubscribeRunning","scheduleLoop","lock","type","Error","toBlock","skip","emitter","IndexerEmitter","argsLen","outputData","data","unwrapDataWrapper","fromBlock","utils","assertHexadecimal","BI","from","validators","ValidateScript","emitters","loop","poll","then","catch","e","stack","blockHash","block","getBlockByNumber","publishAppendBlockEvents","nextBlockNumber","add","header","parentHash","txIndex","tx","transactions","entries","inputTxHashes","inputs","map","previousOutput","txHash","transactionResponse","requestBatchTransactionWithStatus","response","txWithStatus","index","cellIndex","outputCell","transaction","outputs","outputsData","output","forEach","filterEvents","outputIndex","emitMedianTimeEvents","checkFilterOptions","emit","emitterScript","script","checkBlockNumber","lte","checkOutputData","checkScript","codeHash","hashType","checkArgs","args","emitterArgs","substring","medianTimeEmitters","info","getBlockchainInfo","medianTime","medianTimeEmitter","subscribeMedianTime","EventEmitter","exports","getCellsableRpc","liveCells","liveCell","cell","cellOutput","outPoint"],"sources":["../src/indexer.ts"],"sourcesContent":["import {\n  Cell,\n  CellCollector,\n  CellProvider,\n  HexString,\n  Script,\n  Output,\n  utils,\n  Block,\n} from \"@ckb-lumos/base\";\nimport { requestBatchTransactionWithStatus } from \"./services\";\nimport { CKBCellCollector } from \"./collector\";\nimport { EventEmitter } from \"events\";\nimport {\n  CKBIndexerQueryOptions,\n  GetCellsResults,\n  GetLiveCellsResult,\n  IndexerTransaction,\n  IndexerTransactionList,\n  IndexerEmitter,\n  OutputToVerify,\n  SearchKey,\n  IndexerRpc,\n  GetTransactionsSearchKey,\n  SearchKeyFilter,\n  Terminator,\n  OtherQueryOptions,\n  TerminableCellFetcher,\n  GetCellsRpc,\n} from \"./type\";\nimport { BI } from \"@ckb-lumos/bi\";\nimport { RPC as CKBIndexerRpc } from \"./rpc\";\nimport { CKBRPC } from \"@ckb-lumos/rpc\";\nimport { validators } from \"@ckb-lumos/toolkit\";\nimport type * as IndexerType from \"./indexerType\";\nimport { unwrapDataWrapper } from \"./ckbIndexerFilter\";\n\nconst DefaultTerminator: Terminator = () => {\n  return { stop: false, push: true };\n};\n\nfunction defaultLogger(level: string, message: string) {\n  console.log(`[${level}] ${message}`);\n}\n\n/** CkbIndexer.collector will not get cell with blockHash by default, please use OtherQueryOptions.withBlockHash and OtherQueryOptions.CKBRpcUrl to get blockHash if you need. */\nexport class CkbIndexer implements CellProvider, TerminableCellFetcher {\n  static version = \"0.4.1\";\n  uri: string;\n  ckbIndexerUri: string;\n  medianTimeEmitters: EventEmitter[] = [];\n  emitters: IndexerEmitter[] = [];\n  isSubscribeRunning = false;\n\n  constructor(ckbRpcUrl: string);\n  constructor(ckbIndexerUrl: string, ckbRpcUrl: string);\n  constructor(public ckbIndexerUrl: string, public ckbRpcUrl?: string) {\n    this.uri = ckbRpcUrl || ckbIndexerUrl;\n    this.ckbIndexerUri = ckbIndexerUrl;\n  }\n\n  private getCkbRpc(): CKBRPC {\n    return new CKBRPC(this.uri);\n  }\n\n  /* c8 ignore next 12 */\n  private getIndexerRpc(): IndexerRpc {\n    if (this.uri === this.ckbIndexerUri) {\n      const rpc = this.getCkbRpc();\n      return {\n        ...rpc,\n        getTip: rpc.getIndexerTip,\n      };\n    }\n\n    return new CKBIndexerRpc(this.ckbIndexerUri);\n  }\n\n  public async tip(): Promise<IndexerType.Tip> {\n    return await this.getIndexerRpc().getTip();\n  }\n\n  asyncSleep(timeout: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, timeout));\n  }\n\n  async waitForSync(blockDifference = 0): Promise<void> {\n    const rpcTipNumber = parseInt(\n      (await this.getCkbRpc().getTipHeader()).number,\n      16\n    );\n    while (true) {\n      const indexerTipNumber = parseInt((await this.tip()).blockNumber, 16);\n      if (indexerTipNumber + blockDifference >= rpcTipNumber) {\n        return;\n      }\n      await this.asyncSleep(1000);\n    }\n  }\n\n  /** collector cells without blockHash by default.if you need blockHash, please add OtherQueryOptions.withBlockHash and OtherQueryOptions.ckbRpcUrl.\n   * don't use OtherQueryOption if you don't need blockHash,cause it will slowly your collect.\n   */\n  collector(\n    queries: CKBIndexerQueryOptions,\n    otherQueryOptions?: OtherQueryOptions\n  ): CellCollector {\n    return new CKBCellCollector(this, queries, otherQueryOptions);\n  }\n\n  public async getCells(\n    searchKey: SearchKey,\n    terminator: Terminator = DefaultTerminator,\n    searchKeyFilter: SearchKeyFilter = {}\n  ): Promise<GetCellsResults> {\n    return new TerminableCellAdapter(this.getIndexerRpc()).getCells(\n      searchKey,\n      terminator,\n      searchKeyFilter\n    );\n  }\n\n  public async getTransactions<Group extends boolean = false>(\n    searchKey: GetTransactionsSearchKey<Group>,\n    searchKeyFilter: SearchKeyFilter = {}\n  ): Promise<IndexerTransactionList<Group>> {\n    let infos: IndexerTransaction<Group>[] = [];\n    let cursor: string | undefined = searchKeyFilter.lastCursor;\n    const sizeLimit = searchKeyFilter.sizeLimit || 100;\n    const order = searchKeyFilter.order || \"asc\";\n    while (true) {\n      const res = await this.getIndexerRpc().getTransactions<Group>(\n        searchKey,\n        order,\n        `0x${sizeLimit.toString(16)}`,\n        cursor\n      );\n      const txs = res.objects;\n      cursor = res.lastCursor;\n      infos = infos.concat(txs);\n      if (txs.length <= sizeLimit) {\n        break;\n      }\n    }\n    return {\n      objects: infos,\n      lastCursor: cursor,\n    };\n  }\n\n  running(): boolean {\n    return true;\n  }\n\n  start(): void {\n    defaultLogger(\n      \"warn\",\n      \"deprecated: no need to start the ckb-indexer manually\"\n    );\n  }\n\n  startForever(): void {\n    defaultLogger(\n      \"warn\",\n      \"deprecated: no need to startForever the ckb-indexer manually\"\n    );\n  }\n\n  stop(): void {\n    defaultLogger(\n      \"warn\",\n      \"deprecated: no need to stop the ckb-indexer manually\"\n    );\n  }\n\n  subscribe(queries: CKBIndexerQueryOptions): EventEmitter {\n    this.isSubscribeRunning = true;\n    this.scheduleLoop();\n    if (queries.lock && queries.type) {\n      throw new Error(\n        \"The notification machanism only supports you subscribing for one script once so far!\"\n      );\n    }\n    if (queries.toBlock !== null || queries.skip !== null) {\n      defaultLogger(\n        \"warn\",\n        \"The passing fields such as toBlock and skip are ignored in subscribe() method.\"\n      );\n    }\n    const emitter = new IndexerEmitter();\n    emitter.argsLen = queries.argsLen;\n    emitter.outputData = queries.data && unwrapDataWrapper(queries.data);\n    if (queries.fromBlock) {\n      utils.assertHexadecimal(\"fromBlock\", queries.fromBlock);\n    }\n    emitter.fromBlock = !queries.fromBlock\n      ? BI.from(0)\n      : BI.from(queries.fromBlock);\n    if (queries.lock) {\n      validators.ValidateScript(queries.lock);\n      emitter.lock = queries.lock as Script;\n    } else if (queries.type && queries.type !== \"empty\") {\n      validators.ValidateScript(queries.type);\n      emitter.type = queries.type as Script;\n    } else {\n      throw new Error(\"Either lock or type script must be provided!\");\n    }\n    this.emitters.push(emitter);\n    return emitter;\n  }\n\n  private loop() {\n    if (!this.isSubscribeRunning) {\n      return;\n    }\n    this.poll()\n      .then((timeout) => {\n        this.scheduleLoop(timeout);\n      })\n      .catch((e) => {\n        defaultLogger(\n          \"error\",\n          `Error occurs: ${e} ${e.stack}, stopping indexer!`\n        );\n        this.isSubscribeRunning = false;\n      });\n  }\n\n  private scheduleLoop(timeout = 1): void {\n    setTimeout(() => {\n      this.loop();\n    }, timeout);\n  }\n\n  private async poll() {\n    let timeout = 1;\n    const tip = await this.tip();\n    const { blockNumber, blockHash } = tip;\n    if (blockNumber === \"0x0\") {\n      const block: Block = (await this.getCkbRpc().getBlockByNumber(\n        blockNumber\n      )) as Block;\n      await this.publishAppendBlockEvents(block);\n    }\n    const nextBlockNumber = BI.from(blockNumber).add(1);\n    const block: Block = (await this.getCkbRpc().getBlockByNumber(\n      `0x${nextBlockNumber.toString(16)}`\n    )) as Block;\n    if (block) {\n      if (block.header.parentHash === blockHash) {\n        await this.publishAppendBlockEvents(block);\n      } else {\n        const block: Block = (await this.getCkbRpc().getBlockByNumber(\n          blockNumber\n        )) as Block;\n        await this.publishAppendBlockEvents(block);\n      }\n    } else {\n      const block: Block = (await this.getCkbRpc().getBlockByNumber(\n        blockNumber\n      )) as Block;\n      await this.publishAppendBlockEvents(block);\n      timeout = 3 * 1000;\n    }\n    return timeout;\n  }\n\n  private async publishAppendBlockEvents(block: Block) {\n    for (const [txIndex, tx] of block.transactions.entries()) {\n      const blockNumber = block.header.number;\n      // publish changed events if subscribed script exists in previous output cells , skip the cellbase.\n      if (txIndex > 0) {\n        const inputTxHashes = tx.inputs.map(\n          (input) => input.previousOutput.txHash\n        );\n\n        // batch request by block\n        const transactionResponse: OutputToVerify[] =\n          await requestBatchTransactionWithStatus(this.uri, inputTxHashes).then(\n            (response) => {\n              return response.map((txWithStatus, index) => {\n                const cellIndex = tx.inputs[index].previousOutput.index;\n                const outputCell =\n                  txWithStatus.transaction.outputs[parseInt(cellIndex)];\n                const outputData =\n                  txWithStatus.transaction.outputsData[parseInt(cellIndex)];\n                return { output: outputCell, outputData };\n              });\n            }\n          );\n        transactionResponse.forEach(({ output, outputData }) => {\n          this.filterEvents(output, blockNumber, outputData);\n        });\n      }\n      // publish changed events if subscribed script exists in output cells.\n      for (const [outputIndex, output] of tx.outputs.entries()) {\n        const outputData = tx.outputsData[outputIndex];\n        this.filterEvents(output, blockNumber, outputData);\n      }\n    }\n    await this.emitMedianTimeEvents();\n  }\n\n  private filterEvents(\n    output: Output,\n    blockNumber: string,\n    outputData: HexString\n  ) {\n    for (const emitter of this.emitters) {\n      if (\n        emitter.lock !== undefined &&\n        this.checkFilterOptions(\n          emitter,\n          blockNumber,\n          outputData,\n          emitter.lock,\n          output.lock\n        )\n      ) {\n        emitter.emit(\"changed\");\n      }\n    }\n    if (output.type !== null) {\n      for (const emitter of this.emitters) {\n        if (\n          emitter.type !== undefined &&\n          this.checkFilterOptions(\n            emitter,\n            blockNumber,\n            outputData,\n            emitter.type,\n            output.type\n          )\n        ) {\n          emitter.emit(\"changed\");\n        }\n      }\n    }\n  }\n\n  private checkFilterOptions(\n    emitter: IndexerEmitter,\n    blockNumber: string,\n    outputData: string,\n    emitterScript: Script,\n    script: Script | undefined\n  ) {\n    const checkBlockNumber = emitter.fromBlock\n      ? BI.from(emitter.fromBlock).lte(blockNumber)\n      : true;\n    const checkOutputData =\n      emitter.outputData === \"any\" || !emitter.outputData\n        ? true\n        : emitter.outputData === outputData;\n    const checkScript = !script\n      ? true\n      : emitterScript.codeHash === script.codeHash &&\n        emitterScript.hashType === script.hashType &&\n        this.checkArgs(emitter.argsLen, emitterScript.args, script.args);\n    return checkBlockNumber && checkOutputData && checkScript;\n  }\n\n  private checkArgs(\n    argsLen: number | \"any\" | undefined,\n    emitterArgs: HexString,\n    args: HexString\n  ) {\n    if (argsLen === -1 || (!argsLen && argsLen !== 0)) {\n      return emitterArgs === args;\n    } else if (typeof argsLen === \"number\" && args.length === argsLen * 2 + 2) {\n      return args.substring(0, emitterArgs.length) === emitterArgs;\n    } else if (argsLen === \"any\") {\n      return args.substring(0, emitterArgs.length) === emitterArgs;\n    } else {\n      return false;\n    }\n  }\n\n  private async emitMedianTimeEvents() {\n    if (this.medianTimeEmitters.length === 0) {\n      return;\n    }\n    const info = await this.getCkbRpc().getBlockchainInfo();\n    const medianTime = info.medianTime;\n    for (const medianTimeEmitter of this.medianTimeEmitters) {\n      medianTimeEmitter.emit(\"changed\", medianTime);\n    }\n  }\n\n  subscribeMedianTime(): EventEmitter {\n    this.isSubscribeRunning = true;\n    this.scheduleLoop();\n    const medianTimeEmitter = new EventEmitter();\n    this.medianTimeEmitters.push(medianTimeEmitter);\n    return medianTimeEmitter;\n  }\n}\n\nexport class TerminableCellAdapter implements TerminableCellFetcher {\n  constructor(private getCellsableRpc: { getCells: GetCellsRpc }) {}\n\n  async getCells(\n    searchKey: SearchKey,\n    terminator: Terminator = DefaultTerminator,\n    searchKeyFilter: SearchKeyFilter = {}\n  ): Promise<GetCellsResults> {\n    const infos: Cell[] = [];\n    let cursor: string | undefined = searchKeyFilter.lastCursor;\n    const sizeLimit = searchKeyFilter.sizeLimit || 100;\n    const order = searchKeyFilter.order || \"asc\";\n    const index = 0;\n    while (true) {\n      const res: GetLiveCellsResult = await this.getCellsableRpc.getCells(\n        searchKey,\n        order,\n        `0x${sizeLimit.toString(16)}`,\n        cursor\n      );\n      const liveCells = res.objects;\n      cursor = res.lastCursor;\n      for (const liveCell of liveCells) {\n        const cell: Cell = {\n          cellOutput: liveCell.output,\n          data: liveCell.outputData,\n          outPoint: liveCell.outPoint ? liveCell.outPoint : undefined,\n          blockNumber: liveCell.blockNumber,\n        };\n        const { stop, push } = terminator(index, cell);\n        if (push) {\n          infos.push(cell);\n        }\n        if (stop) {\n          return {\n            objects: infos,\n            lastCursor: cursor,\n          };\n        }\n      }\n      if (liveCells.length <= sizeLimit) {\n        break;\n      }\n    }\n    return {\n      objects: infos,\n      lastCursor: cursor,\n    };\n  }\n}\n"],"mappings":"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"}