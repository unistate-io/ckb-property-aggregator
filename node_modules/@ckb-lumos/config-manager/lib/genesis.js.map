{"version":3,"file":"genesis.js","names":["_base","require","SIGHASH_OUTPUT_LOC","exports","MULTISIG_OUTPUT_LOC","DAO_OUTPUT_LOC","SIGHASH_GROUP_OUTPUT_LOC","MULTISIG_GROUP_OUTPUT_LOC","generateGenesisScriptConfigs","genesisBlock","Number","header","number","Error","transactions","SECP256K1_BLAKE160","createScriptConfig","transaction","outputIndex","depGroupTransaction","depGroupOutputIndex","SHORT_ID","SECP256K1_BLAKE160_MULTISIG","DAO","config","_transaction$outputs$","codeHash","utils","computeScriptHash","mustGenesisBlock","outputs","type","HASH_TYPE","CODE_HASH","DEP_TYPE","TX_HASH","hash","INDEX","toHexNumber","x","toString"],"sources":["../src/genesis.ts"],"sourcesContent":["import { Block, Transaction, utils } from \"@ckb-lumos/base\";\nimport { ScriptConfig } from \"./types\";\n\n// https://github.com/nervosnetwork/ckb-sdk-rust/blob/94ce4379454cdaf046f64b346e18e73e029f0ae6/src/constants.rs#L19C1-L24C62\n// the index of a transaction in a block\ntype TransactionIndex = number;\n// the index of an output in a transaction\ntype OutputIndex = number;\nexport const SIGHASH_OUTPUT_LOC: [TransactionIndex, OutputIndex] = [0, 1];\nexport const MULTISIG_OUTPUT_LOC: [TransactionIndex, OutputIndex] = [0, 4];\nexport const DAO_OUTPUT_LOC: [TransactionIndex, OutputIndex] = [0, 2];\nexport const SIGHASH_GROUP_OUTPUT_LOC: [TransactionIndex, OutputIndex] = [1, 0];\n// prettier-ignore\nexport const MULTISIG_GROUP_OUTPUT_LOC: [TransactionIndex, OutputIndex] = [1, 1];\n\n/**\n * Generate {@link ScriptConfig} for the genesis block,\n * use this function when you are on a testnet,\n * or you cannot determine which network you are on\n * @example\n *   const rpc = new RPC('http://localhost:8114')\n *   const genesisBlock = await rpc.getBlockByNumber('0x0')\n *   const scriptConfig = generateGenesisScriptConfigs(genesisBlock)\n * @param genesisBlock\n */\nexport function generateGenesisScriptConfigs(\n  genesisBlock: Block\n): Record<\n  \"SECP256K1_BLAKE160\" | \"SECP256K1_BLAKE160_MULTISIG\" | \"DAO\",\n  ScriptConfig\n> {\n  if (!genesisBlock || Number(genesisBlock.header.number) !== 0) {\n    throw new Error(\"The block must be a genesis block\");\n  }\n\n  const transactions = genesisBlock.transactions;\n\n  return {\n    SECP256K1_BLAKE160: {\n      ...createScriptConfig({\n        transaction: transactions[SIGHASH_OUTPUT_LOC[0]],\n        outputIndex: SIGHASH_OUTPUT_LOC[1],\n        depGroupTransaction: transactions[SIGHASH_GROUP_OUTPUT_LOC[0]],\n        depGroupOutputIndex: SIGHASH_GROUP_OUTPUT_LOC[1],\n      }),\n      SHORT_ID: 0,\n    },\n    SECP256K1_BLAKE160_MULTISIG: {\n      ...createScriptConfig({\n        transaction: transactions[MULTISIG_OUTPUT_LOC[0]],\n        outputIndex: MULTISIG_OUTPUT_LOC[1],\n        depGroupTransaction: transactions[MULTISIG_GROUP_OUTPUT_LOC[0]],\n        depGroupOutputIndex: MULTISIG_GROUP_OUTPUT_LOC[1],\n      }),\n      SHORT_ID: 1,\n    },\n    DAO: createScriptConfig({\n      transaction: transactions[DAO_OUTPUT_LOC[0]],\n      outputIndex: DAO_OUTPUT_LOC[1],\n    }),\n  };\n}\n\ntype ScriptConfigOptions = LocByCode | LocByDepGroup;\n\ntype LocByCode = {\n  transaction: Transaction;\n  outputIndex: number;\n};\ntype LocByDepGroup = {\n  transaction: Transaction;\n  outputIndex: number;\n  depGroupTransaction: Transaction;\n  depGroupOutputIndex: number;\n};\n\nfunction createScriptConfig(config: ScriptConfigOptions): ScriptConfig {\n  const { transaction, outputIndex } = config;\n\n  const codeHash = utils.computeScriptHash(\n    mustGenesisBlock(transaction.outputs[outputIndex]?.type)\n  );\n\n  if (\"depGroupTransaction\" in config) {\n    const { depGroupOutputIndex, depGroupTransaction } = config;\n\n    return {\n      HASH_TYPE: \"type\",\n      CODE_HASH: codeHash,\n\n      DEP_TYPE: \"depGroup\",\n      TX_HASH: mustGenesisBlock(depGroupTransaction.hash),\n      INDEX: toHexNumber(depGroupOutputIndex),\n    };\n  }\n\n  return {\n    HASH_TYPE: \"type\",\n    CODE_HASH: codeHash,\n\n    DEP_TYPE: \"code\",\n    INDEX: toHexNumber(outputIndex),\n    TX_HASH: mustGenesisBlock(transaction.hash),\n  };\n}\n\nfunction mustGenesisBlock<T>(x: T): NonNullable<T> {\n  if (x == null) {\n    throw new Error(\"The block must be a genesis block\");\n  }\n  return x;\n}\n\nfunction toHexNumber(number: number): string {\n  return `0x${number.toString(16)}`;\n}\n"],"mappings":"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"}