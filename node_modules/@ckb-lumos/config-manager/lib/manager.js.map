{"version":3,"file":"manager.js","names":["_deepFreezeStrict","_interopRequireDefault","require","_base","_predefined","obj","__esModule","default","assertHexString","debugPath","string","test","Error","assertHash","hash","length","assertInteger","i","assertHashType","hashType","assert","condition","validateConfig","config","SCRIPTS","scriptName","Object","keys","scriptConfig","CODE_HASH","HASH_TYPE","TX_HASH","INDEX","depType","DEP_TYPE","shortId","SHORT_ID","undefined","predefined","LINA","getConfig","initializeConfigLegacy","_process","env","process","configName","LUMOS_CONFIG_NAME","configFile","LUMOS_CONFIG_FILE","configFilename","data","readFileSync","loadedConfig","JSON","parse","deepFreeze","e","initializeConfig","inputConfig","logger","deprecated"],"sources":["../src/manager.ts"],"sourcesContent":["import deepFreeze from \"deep-freeze-strict\";\nimport { logger } from \"@ckb-lumos/base\";\nimport { Config } from \"./types\";\nimport { predefined } from \"./predefined\";\n\nfunction assertHexString(debugPath: string, string: string) {\n  if (!/^0x([0-9a-fA-F][0-9a-fA-F])*$/.test(string)) {\n    throw new Error(`${debugPath} must be a hex string!`);\n  }\n}\n\nfunction assertHash(debugPath: string, hash: string) {\n  assertHexString(debugPath, hash);\n  if (hash.length != 66) {\n    throw new Error(`${debugPath} must be a hex string of 66 bytes long!`);\n  }\n}\n\nfunction assertInteger(debugPath: string, i: string) {\n  if (i === \"0x0\") {\n    return;\n  }\n  if (!/^0x[1-9a-fA-F][0-9a-fA-F]*$/.test(i)) {\n    throw new Error(`${debugPath} must be a hex integer!`);\n  }\n}\n\nexport function assertHashType(debugPath: string, hashType: string): void {\n  if (\n    hashType !== \"type\" &&\n    hashType !== \"data\" &&\n    hashType !== \"data1\" &&\n    hashType !== \"data2\"\n  ) {\n    throw new Error(`${debugPath} must one of type, data, data1, data2!`);\n  }\n}\n\nfunction assert(condition: unknown, debugPath = \"variable\"): asserts condition {\n  if (!condition) throw new Error(`${debugPath} is not valid`);\n}\n\nexport function validateConfig(config: Config): void {\n  assert(\n    typeof config.SCRIPTS === \"object\" && config.SCRIPTS != null,\n    \"config.SCRIPT\"\n  );\n\n  for (const scriptName of Object.keys(config.SCRIPTS)) {\n    const scriptConfig = config.SCRIPTS[scriptName];\n\n    assert(scriptConfig?.CODE_HASH);\n\n    assertHash(`SCRIPTS.${scriptName}.CODE_HASH`, scriptConfig.CODE_HASH);\n    assertHashType(`SCRIPTS.${scriptName}.HASH_TYPE`, scriptConfig.HASH_TYPE);\n    assertHash(`SCRIPTS.${scriptName}.TX_HASH`, scriptConfig.TX_HASH);\n    assertInteger(`SCRIPTS.${scriptName}.INDEX`, scriptConfig.INDEX);\n    const depType = scriptConfig.DEP_TYPE;\n    if (depType !== \"depGroup\" && depType !== \"code\") {\n      throw new Error(\n        `SCRIPTS.${scriptName}.DEP_TYPE must either be depGroup or code!`\n      );\n    }\n    const shortId = scriptConfig.SHORT_ID;\n    // Short ID is optional\n    if (shortId != undefined) {\n      if (typeof shortId !== \"number\") {\n        throw new Error(\"SHORT_ID must be a number!\");\n      }\n    }\n  }\n}\n\nlet config: Config = predefined.LINA;\n\nexport function getConfig(): Config {\n  return config;\n}\n\n/**\n * Initialize current app with a config. The initializaton steps work as follows:\n * 1. If `LUMOS_CONFIG_NAME` environment variable is set to a predefined config,\n * the predefined config is loaded;\n * 2. If `LUMOS_CONFIG_FILE` environment variable is set, it will be used as the\n * name of a file containing the Config to use.\n * 3. A file named `config.json` in current running directory will be used as the\n * file containing the Config to use.\n * @deprecated\n * @returns void\n */\nfunction initializeConfigLegacy() {\n  const env = process?.env;\n  const configName = env?.LUMOS_CONFIG_NAME;\n\n  if (\n    (configName === \"LINA\" || configName === \"AGGRON4\") &&\n    predefined[configName]\n  ) {\n    config = predefined[configName];\n    return;\n  }\n\n  const configFile = env?.LUMOS_CONFIG_FILE;\n  const configFilename = configFile || \"config.json\";\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const data = require(\"fs\").readFileSync(configFilename);\n    const loadedConfig = JSON.parse(data);\n    validateConfig(loadedConfig);\n    config = deepFreeze(loadedConfig);\n  } catch (e) {\n    throw new Error(`Error loading config from file ${configFilename}: ${e}`);\n  }\n}\n\nexport function initializeConfig(inputConfig?: Config): void {\n  if (!inputConfig) {\n    logger.deprecated(\n      \"initializeConfig with env will be deprecated, please migrate to initializeConfig(...)\"\n    );\n    initializeConfigLegacy();\n  } else {\n    validateConfig(inputConfig);\n    config = deepFreeze(inputConfig);\n  }\n}\n"],"mappings":";;;;;;;;;AAAA,IAAAA,iBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,KAAA,GAAAD,OAAA;AAEA,IAAAE,WAAA,GAAAF,OAAA;AAA0C,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAE1C,SAASG,eAAeA,CAACC,SAAiB,EAAEC,MAAc,EAAE;EAC1D,IAAI,CAAC,+BAA+B,CAACC,IAAI,CAACD,MAAM,CAAC,EAAE;IACjD,MAAM,IAAIE,KAAK,CAAE,GAAEH,SAAU,wBAAuB,CAAC;EACvD;AACF;AAEA,SAASI,UAAUA,CAACJ,SAAiB,EAAEK,IAAY,EAAE;EACnDN,eAAe,CAACC,SAAS,EAAEK,IAAI,CAAC;EAChC,IAAIA,IAAI,CAACC,MAAM,IAAI,EAAE,EAAE;IACrB,MAAM,IAAIH,KAAK,CAAE,GAAEH,SAAU,yCAAwC,CAAC;EACxE;AACF;AAEA,SAASO,aAAaA,CAACP,SAAiB,EAAEQ,CAAS,EAAE;EACnD,IAAIA,CAAC,KAAK,KAAK,EAAE;IACf;EACF;EACA,IAAI,CAAC,6BAA6B,CAACN,IAAI,CAACM,CAAC,CAAC,EAAE;IAC1C,MAAM,IAAIL,KAAK,CAAE,GAAEH,SAAU,yBAAwB,CAAC;EACxD;AACF;AAEO,SAASS,cAAcA,CAACT,SAAiB,EAAEU,QAAgB,EAAQ;EACxE,IACEA,QAAQ,KAAK,MAAM,IACnBA,QAAQ,KAAK,MAAM,IACnBA,QAAQ,KAAK,OAAO,IACpBA,QAAQ,KAAK,OAAO,EACpB;IACA,MAAM,IAAIP,KAAK,CAAE,GAAEH,SAAU,wCAAuC,CAAC;EACvE;AACF;AAEA,SAASW,MAAMA,CAACC,SAAkB,EAAEZ,SAAS,GAAG,UAAU,EAAqB;EAC7E,IAAI,CAACY,SAAS,EAAE,MAAM,IAAIT,KAAK,CAAE,GAAEH,SAAU,eAAc,CAAC;AAC9D;AAEO,SAASa,cAAcA,CAACC,MAAc,EAAQ;EACnDH,MAAM,CACJ,OAAOG,MAAM,CAACC,OAAO,KAAK,QAAQ,IAAID,MAAM,CAACC,OAAO,IAAI,IAAI,EAC5D,eACF,CAAC;EAED,KAAK,MAAMC,UAAU,IAAIC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC,EAAE;IACpD,MAAMI,YAAY,GAAGL,MAAM,CAACC,OAAO,CAACC,UAAU,CAAC;IAE/CL,MAAM,CAACQ,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEC,SAAS,CAAC;IAE/BhB,UAAU,CAAE,WAAUY,UAAW,YAAW,EAAEG,YAAY,CAACC,SAAS,CAAC;IACrEX,cAAc,CAAE,WAAUO,UAAW,YAAW,EAAEG,YAAY,CAACE,SAAS,CAAC;IACzEjB,UAAU,CAAE,WAAUY,UAAW,UAAS,EAAEG,YAAY,CAACG,OAAO,CAAC;IACjEf,aAAa,CAAE,WAAUS,UAAW,QAAO,EAAEG,YAAY,CAACI,KAAK,CAAC;IAChE,MAAMC,OAAO,GAAGL,YAAY,CAACM,QAAQ;IACrC,IAAID,OAAO,KAAK,UAAU,IAAIA,OAAO,KAAK,MAAM,EAAE;MAChD,MAAM,IAAIrB,KAAK,CACZ,WAAUa,UAAW,4CACxB,CAAC;IACH;IACA,MAAMU,OAAO,GAAGP,YAAY,CAACQ,QAAQ;IACrC;IACA,IAAID,OAAO,IAAIE,SAAS,EAAE;MACxB,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAIvB,KAAK,CAAC,4BAA4B,CAAC;MAC/C;IACF;EACF;AACF;AAEA,IAAIW,MAAc,GAAGe,sBAAU,CAACC,IAAI;AAE7B,SAASC,SAASA,CAAA,EAAW;EAClC,OAAOjB,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASkB,sBAAsBA,CAAA,EAAG;EAAA,IAAAC,QAAA;EAChC,MAAMC,GAAG,IAAAD,QAAA,GAAGE,OAAO,cAAAF,QAAA,uBAAPA,QAAA,CAASC,GAAG;EACxB,MAAME,UAAU,GAAGF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEG,iBAAiB;EAEzC,IACE,CAACD,UAAU,KAAK,MAAM,IAAIA,UAAU,KAAK,SAAS,KAClDP,sBAAU,CAACO,UAAU,CAAC,EACtB;IACAtB,MAAM,GAAGe,sBAAU,CAACO,UAAU,CAAC;IAC/B;EACF;EAEA,MAAME,UAAU,GAAGJ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEK,iBAAiB;EACzC,MAAMC,cAAc,GAAGF,UAAU,IAAI,aAAa;EAClD,IAAI;IACF;IACA,MAAMG,IAAI,GAAGhD,OAAO,CAAC,IAAI,CAAC,CAACiD,YAAY,CAACF,cAAc,CAAC;IACvD,MAAMG,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;IACrC5B,cAAc,CAAC8B,YAAY,CAAC;IAC5B7B,MAAM,GAAG,IAAAgC,yBAAU,EAACH,YAAY,CAAC;EACnC,CAAC,CAAC,OAAOI,CAAC,EAAE;IACV,MAAM,IAAI5C,KAAK,CAAE,kCAAiCqC,cAAe,KAAIO,CAAE,EAAC,CAAC;EAC3E;AACF;AAEO,SAASC,gBAAgBA,CAACC,WAAoB,EAAQ;EAC3D,IAAI,CAACA,WAAW,EAAE;IAChBC,YAAM,CAACC,UAAU,CACf,uFACF,CAAC;IACDnB,sBAAsB,CAAC,CAAC;EAC1B,CAAC,MAAM;IACLnB,cAAc,CAACoC,WAAW,CAAC;IAC3BnC,MAAM,GAAG,IAAAgC,yBAAU,EAACG,WAAW,CAAC;EAClC;AACF"}