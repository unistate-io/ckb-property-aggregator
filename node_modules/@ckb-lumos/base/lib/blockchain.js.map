{"version":3,"file":"blockchain.js","names":["_codec","require","Uint128LE","Uint8","Uint32LE","Uint64LE","number","byteVecOf","option","table","vector","struct","molecule","bytify","hexify","bytes","createFixedHexBytesCodec","byteLength","createFixedBytesCodec","pack","hex","unpack","buf","Bytes","exports","BytesOpt","BytesVec","Byte32","Byte32Vec","WitnessArgsOf","payload","lock","inputType","outputType","HexifyCodec","createBytesCodec","WitnessArgs","HashType","type","Error","hashTypeBuf","DepType","depTypeBuf","Script","codeHash","hashType","args","ScriptOpt","OutPoint","txHash","index","CellInput","since","previousOutput","CellInputVec","CellOutput","capacity","CellOutputVec","CellDep","outPoint","depType","CellDepVec","RawTransaction","version","cellDeps","headerDeps","inputs","outputs","outputsData","BaseTransaction","raw","witnesses","Transaction","tx","transformTransactionCodecType","deTransformTransactionCodecType","TransactionVec","RawHeader","compactTarget","timestamp","epoch","parentHash","transactionsRoot","proposalsHash","extraHash","dao","BaseHeader","nonce","Header","header","transformHeaderCodecType","deTransformHeaderCodecType","ProposalShortId","ProposalShortIdVec","UncleBlock","proposals","UncleBlockVec","Block","uncles","transactions","BlockV1","extension","CellbaseWitness","message","data","map","cellDep","input","output","Number","hash"],"sources":["../src/blockchain.ts"],"sourcesContent":["import {\n  AnyCodec,\n  BytesLike,\n  createBytesCodec,\n  createFixedBytesCodec,\n  PackParam,\n  UnpackResult,\n  number,\n  molecule,\n  bytes,\n} from \"@ckb-lumos/codec\";\nimport { BytesCodec, FixedBytesCodec } from \"@ckb-lumos/codec/lib/base\";\n\nimport type * as api from \"./api\";\nimport { BI } from \"@ckb-lumos/bi\";\n\nconst { Uint128LE, Uint8, Uint32LE, Uint64LE } = number;\nconst { byteVecOf, option, table, vector, struct } = molecule;\nconst { bytify, hexify } = bytes;\n\ntype TransactionCodecType = PackParam<typeof BaseTransaction>;\ntype TransactionUnpackResultType = UnpackResult<typeof BaseTransaction>;\ntype RawTransactionUnpackResultType = UnpackResult<typeof RawTransaction>;\ntype HeaderCodecType = PackParam<typeof BaseHeader>;\ntype HeaderUnpackResultType = UnpackResult<typeof BaseHeader>;\ntype RawHeaderUnpackResultType = UnpackResult<typeof RawHeader>;\n\nexport function createFixedHexBytesCodec(\n  byteLength: number\n): FixedBytesCodec<string, BytesLike> {\n  return createFixedBytesCodec({\n    byteLength,\n    pack: (hex) => bytify(hex),\n    unpack: (buf) => hexify(buf),\n  });\n}\n\n/**\n * placeholder codec, generally used as a placeholder\n * ```\n * // for example, when some BytesOpt is not used, it will be filled with this codec\n * // option BytesOpt (Bytes);\n * const UnusedBytesOpt = UnknownOpt\n * ```\n */\n// export const UnusedOpt = option(Unknown);\n\n// vector Bytes <byte>\nexport const Bytes = byteVecOf({ pack: bytify, unpack: hexify });\n\nexport const BytesOpt = option(Bytes);\nexport const BytesVec = vector(Bytes);\nexport const Byte32 = createFixedHexBytesCodec(32);\nexport const Byte32Vec = vector(Byte32);\n\nexport function WitnessArgsOf<\n  LockCodec extends AnyCodec,\n  InputTypeCodec extends AnyCodec,\n  OutputTypeCodec extends AnyCodec\n>(payload: {\n  lock: LockCodec;\n  inputType: InputTypeCodec;\n  outputType: OutputTypeCodec;\n}): BytesCodec<\n  {\n    lock?: UnpackResult<LockCodec>;\n    inputType?: UnpackResult<InputTypeCodec>;\n    outputType?: UnpackResult<OutputTypeCodec>;\n  },\n  {\n    lock?: PackParam<LockCodec>;\n    inputType?: PackParam<InputTypeCodec>;\n    outputType?: PackParam<OutputTypeCodec>;\n  }\n> {\n  return table(\n    {\n      lock: option(byteVecOf(payload.lock)),\n      inputType: option(byteVecOf(payload.inputType)),\n      outputType: option(byteVecOf(payload.outputType)),\n    },\n    [\"lock\", \"inputType\", \"outputType\"]\n  );\n}\n\nconst HexifyCodec = createBytesCodec<string, BytesLike>({\n  pack: bytify,\n  unpack: hexify,\n});\n\n/**\n *\n * @example\n * ```ts\n * // secp256k1 lock witness\n * WitnessArgs.pack({ lock: '0x' + '00'.repeat(65) })\n * ```\n */\nexport const WitnessArgs = WitnessArgsOf({\n  lock: HexifyCodec,\n  inputType: HexifyCodec,\n  outputType: HexifyCodec,\n});\n\n/**\n * <pre>\n *  0b0000000 0\n *    ───┬─── │\n *       │    ▼\n *       │   type - use the default vm version\n *       │\n *       ▼\n * data* - use a particular vm version\n * </pre>\n *\n * Implementation of blockchain.mol\n * https://github.com/nervosnetwork/ckb/blob/5a7efe7a0b720de79ff3761dc6e8424b8d5b22ea/util/types/schemas/blockchain.mol\n */\nexport const HashType = createFixedBytesCodec<api.HashType>({\n  byteLength: 1,\n  pack: (type) => {\n    // prettier-ignore\n    if (type === \"type\")  return Uint8.pack(0b0000000_1);\n    // prettier-ignore\n    if (type === \"data\")  return Uint8.pack(0b0000000_0);\n    if (type === \"data1\") return Uint8.pack(0b0000001_0);\n    if (type === \"data2\") return Uint8.pack(0b0000010_0);\n    throw new Error(`Invalid hash type: ${type}`);\n  },\n  unpack: (buf) => {\n    const hashTypeBuf = Uint8.unpack(buf);\n    if (hashTypeBuf === 0b0000000_1) return \"type\";\n    if (hashTypeBuf === 0b0000000_0) return \"data\";\n    if (hashTypeBuf === 0b0000001_0) return \"data1\";\n    if (hashTypeBuf === 0b0000010_0) return \"data2\";\n    throw new Error(`Invalid hash type: ${hashTypeBuf}`);\n  },\n});\n\nexport const DepType = createFixedBytesCodec<api.DepType>({\n  byteLength: 1,\n  pack: (type) => {\n    if (type === \"code\") return Uint8.pack(0);\n    if (type === \"depGroup\") return Uint8.pack(1);\n    throw new Error(`Invalid dep type: ${type}`);\n  },\n  unpack: (buf) => {\n    const depTypeBuf = Uint8.unpack(buf);\n    if (depTypeBuf === 0) return \"code\";\n    if (depTypeBuf === 1) return \"depGroup\";\n    throw new Error(`Invalid dep type: ${depTypeBuf}`);\n  },\n});\n\nexport const Script = table(\n  {\n    codeHash: Byte32,\n    hashType: HashType,\n    args: Bytes,\n  },\n  [\"codeHash\", \"hashType\", \"args\"]\n);\n\nexport const ScriptOpt = option(Script);\n\nexport const OutPoint = struct(\n  {\n    txHash: Byte32,\n    index: Uint32LE,\n  },\n  [\"txHash\", \"index\"]\n);\n\nexport const CellInput = struct(\n  {\n    since: Uint64LE,\n    previousOutput: OutPoint,\n  },\n  [\"since\", \"previousOutput\"]\n);\n\nexport const CellInputVec = vector(CellInput);\n\nexport const CellOutput = table(\n  {\n    capacity: Uint64LE,\n    lock: Script,\n    type: ScriptOpt,\n  },\n  [\"capacity\", \"lock\", \"type\"]\n);\n\nexport const CellOutputVec = vector(CellOutput);\n\nexport const CellDep = struct(\n  {\n    outPoint: OutPoint,\n    depType: DepType,\n  },\n  [\"outPoint\", \"depType\"]\n);\n\nexport const CellDepVec = vector(CellDep);\n\nexport const RawTransaction = table(\n  {\n    version: Uint32LE,\n    cellDeps: CellDepVec,\n    headerDeps: Byte32Vec,\n    inputs: CellInputVec,\n    outputs: CellOutputVec,\n    outputsData: BytesVec,\n  },\n  [\"version\", \"cellDeps\", \"headerDeps\", \"inputs\", \"outputs\", \"outputsData\"]\n);\n\nconst BaseTransaction = table(\n  {\n    raw: RawTransaction,\n    witnesses: BytesVec,\n  },\n  [\"raw\", \"witnesses\"]\n);\n\nexport const Transaction = createBytesCodec({\n  pack: (tx: api.Transaction) =>\n    BaseTransaction.pack(transformTransactionCodecType(tx)),\n  unpack: (buf) => deTransformTransactionCodecType(BaseTransaction.unpack(buf)),\n});\n\nexport const TransactionVec = vector(Transaction);\n\nexport const RawHeader = struct(\n  {\n    version: Uint32LE,\n    compactTarget: Uint32LE,\n    timestamp: Uint64LE,\n    number: Uint64LE,\n    epoch: Uint64LE,\n    parentHash: Byte32,\n    transactionsRoot: Byte32,\n    proposalsHash: Byte32,\n    extraHash: Byte32,\n    dao: Byte32,\n  },\n  [\n    \"version\",\n    \"compactTarget\",\n    \"timestamp\",\n    \"number\",\n    \"epoch\",\n    \"parentHash\",\n    \"transactionsRoot\",\n    \"proposalsHash\",\n    \"extraHash\",\n    \"dao\",\n  ]\n);\n\nexport const BaseHeader = struct(\n  {\n    raw: RawHeader,\n    nonce: Uint128LE,\n  },\n  [\"raw\", \"nonce\"]\n);\n\nexport const Header = createBytesCodec({\n  pack: (header: api.Header) =>\n    BaseHeader.pack(transformHeaderCodecType(header)),\n  unpack: (buf) => deTransformHeaderCodecType(BaseHeader.unpack(buf)),\n});\n\nexport const ProposalShortId = createFixedHexBytesCodec(10);\n\nexport const ProposalShortIdVec = vector(ProposalShortId);\n\nexport const UncleBlock = table(\n  {\n    header: Header,\n    proposals: ProposalShortIdVec,\n  },\n  [\"header\", \"proposals\"]\n);\n\nexport const UncleBlockVec = vector(UncleBlock);\n\nexport const Block = table(\n  {\n    header: Header,\n    uncles: UncleBlockVec,\n    transactions: TransactionVec,\n    proposals: ProposalShortIdVec,\n  },\n  [\"header\", \"uncles\", \"transactions\", \"proposals\"]\n);\n\nexport const BlockV1 = table(\n  {\n    header: Header,\n    uncles: UncleBlockVec,\n    transactions: TransactionVec,\n    proposals: ProposalShortIdVec,\n    extension: Bytes,\n  },\n  [\"header\", \"uncles\", \"transactions\", \"proposals\", \"extension\"]\n);\n\nexport const CellbaseWitness = table(\n  {\n    lock: Script,\n    message: Bytes,\n  },\n  [\"lock\", \"message\"]\n);\n\n// TODO make an enhancer for number codecs\n/**\n * from Transantion defined in  @ckb-lumos/base/lib/api.d.ts\n * ```\n * export interface Transaction {\n *  cellDeps: CellDep[];\n *  hash?: Hash;\n *  headerDeps: Hash[];\n *  inputs: Input[];\n *  outputs: Output[];\n *  outputsData: HexString[];\n *  version: HexNumber;\n *  witnesses: HexString[];\n *}\n * to :\n * interface TransactionCodecType {\n *   raw: {\n *     version: Uint32LE;\n *     cellDeps: DeCellDepVec;\n *     headerDeps: Byte32Vec;\n *     inputs: CellInputVec;\n *     outputs: CellOutputVec;\n *     outputsData: BytesVec;\n *   };\n *   witnesses: BytesVec;\n * }\n * ```\n * @param data Transantion defined in @ckb-lumos/base/lib/api.d.ts\n * @returns TransactionCodecType\n */\nexport function transformTransactionCodecType(\n  data: api.Transaction\n): TransactionCodecType {\n  return {\n    raw: {\n      version: data.version,\n      cellDeps: data.cellDeps,\n      headerDeps: data.headerDeps,\n      inputs: data.inputs,\n      outputs: data.outputs,\n      outputsData: data.outputsData,\n    },\n    witnesses: data.witnesses,\n  };\n}\n\nexport function deTransformTransactionCodecType(\n  data: TransactionUnpackResultType\n): RawTransactionUnpackResultType & { witnesses: string[] } {\n  return {\n    cellDeps: data.raw.cellDeps.map((cellDep) => {\n      return {\n        outPoint: {\n          txHash: cellDep.outPoint.txHash,\n          index: cellDep.outPoint.index,\n        },\n        depType: cellDep.depType,\n      };\n    }),\n    headerDeps: data.raw.headerDeps,\n    inputs: data.raw.inputs.map((input) => {\n      return {\n        previousOutput: {\n          txHash: input.previousOutput.txHash,\n          index: input.previousOutput.index,\n        },\n        since: input.since,\n      };\n    }),\n    outputs: data.raw.outputs.map((output) => {\n      return {\n        capacity: output.capacity,\n        lock: output.lock,\n        type: output.type,\n      };\n    }),\n    outputsData: data.raw.outputsData,\n    version: data.raw.version,\n    witnesses: data.witnesses,\n  };\n}\n\nexport function transformHeaderCodecType(data: api.Header): HeaderCodecType {\n  return {\n    raw: {\n      timestamp: data.timestamp,\n      number: data.number,\n      epoch: data.epoch,\n      compactTarget: Number(data.compactTarget),\n      dao: data.dao,\n      parentHash: data.parentHash,\n      proposalsHash: data.proposalsHash,\n      transactionsRoot: data.transactionsRoot,\n      extraHash: data.extraHash,\n      version: data.version,\n    },\n    nonce: data.nonce,\n  };\n}\n\nexport function deTransformHeaderCodecType(\n  data: HeaderUnpackResultType\n): RawHeaderUnpackResultType & { nonce: BI; hash: string } {\n  return {\n    timestamp: data.raw.timestamp,\n    number: data.raw.number,\n    epoch: data.raw.epoch,\n    compactTarget: data.raw.compactTarget,\n    dao: data.raw.dao,\n    parentHash: data.raw.parentHash,\n    proposalsHash: data.raw.proposalsHash,\n    transactionsRoot: data.raw.transactionsRoot,\n    extraHash: data.raw.extraHash,\n    version: data.raw.version,\n    nonce: data.nonce,\n    hash: \"\",\n  };\n}\n"],"mappings":"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"}