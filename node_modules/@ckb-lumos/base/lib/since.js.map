{"version":3,"file":"since.js","names":["_bi","require","parseSince","since","result","parseSinceCompatible","type","value","toBigInt","sinceBI","BI","from","flag","shr","metricFlag","and","eq","length","toNumber","index","number","Error","relative","generateSince","add","v","isBIish","generateHeaderEpoch","_toHex","shl","parseEpoch","epoch","epochBI","maximumAbsoluteEpochSince","args","parsedArgs","map","arg","parseAbsoluteEpochSince","maxNumber","Math","max","maxArgs","filter","i","current","mul","gte","generateAbsoluteEpochSince","validateAbsoluteEpochSince","tipHeaderEpoch","headerEpochParams","lt","lte","validateSince","tipSinceValidationInfo","cellSinceValidationInfo","blockNumber","median_timestamp","sinceHeaderEpoch","added","div","mod","num","toString"],"sources":["../src/since.ts"],"sourcesContent":["import { BIish, BI, isBIish } from \"@ckb-lumos/bi\";\nimport { HexNumber, PackedSince, HexString } from \"./primitive\";\n\nexport type SinceType = \"epochNumber\" | \"blockNumber\" | \"blockTimestamp\";\n\nexport interface EpochSinceValue {\n  length: number;\n  index: number;\n  number: number;\n}\nexport interface SinceValidationInfo {\n  blockNumber: HexNumber;\n  epoch: HexNumber;\n  median_timestamp: HexNumber;\n}\n\n/**\n * Parse since and get relative or not, type, and value of since\n *\n * @param since\n */\nfunction parseSince(since: PackedSince):\n  | {\n      relative: boolean;\n      type: \"epochNumber\";\n      value: EpochSinceValue;\n    }\n  | {\n      relative: boolean;\n      type: \"blockNumber\" | \"blockTimestamp\";\n      value: bigint;\n    } {\n  const result = parseSinceCompatible(since);\n\n  if (result.type === \"epochNumber\") return result;\n  return { ...result, value: result.value.toBigInt() };\n}\n\ntype SinceParseResult =\n  | { relative: boolean; type: \"epochNumber\"; value: EpochSinceValue }\n  | { relative: boolean; type: \"blockNumber\" | \"blockTimestamp\"; value: BI };\n\nfunction parseSinceCompatible(since: PackedSince): SinceParseResult {\n  const sinceBI = BI.from(since);\n  const flag = sinceBI.shr(56);\n  const metricFlag = flag.shr(5).and(\"0b11\");\n  let type: SinceType | undefined;\n  let value: BI | EpochSinceValue;\n  if (metricFlag.eq(0b00)) {\n    type = \"blockNumber\";\n    value = sinceBI.and(\"0xFFFFFFFFFFFFFF\");\n  } else if (metricFlag.eq(0b01)) {\n    type = \"epochNumber\";\n    value = {\n      length: sinceBI.shr(40).and(0xffff).toNumber(),\n      index: sinceBI.shr(24).and(0xffff).toNumber(),\n      number: sinceBI.and(0xffffff).toNumber(),\n    };\n  } else if (metricFlag.eq(0b10)) {\n    type = \"blockTimestamp\";\n    value = sinceBI.and(\"0xFFFFFFFFFFFFFF\");\n  } else {\n    throw new Error(\"Invalid metric flag!\");\n  }\n\n  return {\n    relative: !flag.and(\"0x80\").eq(0),\n    type,\n    value,\n  } as SinceParseResult;\n}\n\nfunction generateSince({\n  relative,\n  type,\n  value,\n}:\n  | {\n      relative: boolean;\n      type: SinceType;\n      value: BIish;\n    }\n  | {\n      relative: boolean;\n      type: \"epochNumber\";\n      value: EpochSinceValue;\n    }): string {\n  let flag = BI.from(0);\n\n  if (relative) {\n    flag = flag.add(0b10000000);\n  }\n\n  if (type === \"epochNumber\") {\n    flag = flag.add(0b00100000);\n  } else if (type === \"blockTimestamp\") {\n    flag = flag.add(0b01000000);\n  }\n\n  let v;\n  if (isBIish(value)) {\n    v = BI.from(value);\n  } else if (typeof value === \"object\") {\n    v = generateHeaderEpoch(value);\n  } else {\n    v = BI.from(value);\n  }\n  return _toHex(flag.shl(56).add(v));\n}\n\n/**\n * parse epoch from blockHeader.epoch\n *\n * @param epoch\n */\nfunction parseEpoch(epoch: BIish): EpochSinceValue {\n  const epochBI = BI.from(epoch);\n  return {\n    length: epochBI.shr(40).and(0xffff).toNumber(),\n    index: epochBI.shr(24).and(0xffff).toNumber(),\n    number: epochBI.and(0xffffff).toNumber(),\n  };\n}\n\n/**\n * return maximum since of args\n *\n * @param args sinces in absolute-epoch-number format\n */\nfunction maximumAbsoluteEpochSince(...args: PackedSince[]): string {\n  const parsedArgs = args.map((arg) => parseAbsoluteEpochSince(arg));\n  const maxNumber = Math.max(...parsedArgs.map((arg) => arg.number));\n  const maxArgs = parsedArgs.filter((arg) => arg.number === maxNumber);\n  let max = maxArgs[0];\n\n  for (let i = 1; i < maxArgs.length; ++i) {\n    const current = maxArgs[i];\n    if (\n      BI.from(current.index)\n        .mul(max.length)\n        .gte(BI.from(max.index).mul(current.length))\n    ) {\n      max = current;\n    }\n  }\n\n  return generateAbsoluteEpochSince(max);\n}\n\n/**\n * generate absolute-epoch-number format since\n *\n * @param params\n */\nfunction generateAbsoluteEpochSince({\n  length,\n  index,\n  number,\n}: EpochSinceValue): PackedSince {\n  return generateSince({\n    relative: false,\n    type: \"epochNumber\",\n    value: { length, index, number },\n  });\n}\n\n/**\n * generate header epoch from epoch since value\n *\n * @param params\n */\nfunction generateHeaderEpoch({\n  length,\n  index,\n  number,\n}: EpochSinceValue): HexString {\n  return _toHex(\n    BI.from(length).shl(40).add(BI.from(index).shl(24)).add(number)\n  );\n}\n\n/**\n * Will throw an error if since not in absolute-epoch-number format\n *\n * @param since\n */\nfunction parseAbsoluteEpochSince(since: PackedSince): EpochSinceValue {\n  const { relative, type, value } = parseSinceCompatible(since);\n\n  if (!(relative === false && type === \"epochNumber\")) {\n    throw new Error(\"Since format error!\");\n  }\n\n  return value as EpochSinceValue;\n}\n\n/**\n * Will throw an error if since not in absolute-epoch-number format\n *\n * @param since\n * @param tipHeaderEpoch\n */\nfunction validateAbsoluteEpochSince(\n  since: PackedSince,\n  tipHeaderEpoch: HexString\n): boolean {\n  const value = parseSinceCompatible(since).value as EpochSinceValue;\n  const headerEpochParams = parseEpoch(tipHeaderEpoch);\n  return (\n    BI.from(value.number).lt(headerEpochParams.number) ||\n    (BI.from(value.number).eq(headerEpochParams.number) &&\n      BI.from(value.index)\n        .mul(headerEpochParams.length)\n        .lte(BI.from(headerEpochParams.index).mul(value.length)))\n  );\n}\n\n/**\n * Compare since with tipHeader, check since is valid or not.\n *\n * @param since\n * @param tipHeader\n * @param sinceHeader can left empty if absolute since\n */\nfunction validateSince(\n  since: PackedSince,\n  tipSinceValidationInfo: SinceValidationInfo,\n  cellSinceValidationInfo: SinceValidationInfo\n): boolean {\n  const { relative, type, value } = parseSinceCompatible(since);\n\n  if (!relative) {\n    if (type === \"epochNumber\") {\n      return validateAbsoluteEpochSince(since, tipSinceValidationInfo.epoch);\n    }\n\n    if (type === \"blockNumber\") {\n      return BI.from(value).lte(tipSinceValidationInfo.blockNumber);\n    }\n\n    if (type === \"blockTimestamp\") {\n      if (!tipSinceValidationInfo.median_timestamp) {\n        throw new Error(`Must provide tip median_timestamp!`);\n      }\n      return BI.from(value)\n        .mul(1000)\n        .lte(tipSinceValidationInfo.median_timestamp);\n    }\n  } else {\n    if (type === \"epochNumber\") {\n      const tipHeaderEpoch = parseEpoch(tipSinceValidationInfo.epoch);\n      const sinceHeaderEpoch = parseEpoch(cellSinceValidationInfo.epoch);\n      const added: Record<keyof EpochSinceValue, BI> = {\n        number: BI.from((value as EpochSinceValue).number).add(\n          sinceHeaderEpoch.number\n        ),\n        index: BI.from((value as EpochSinceValue).index)\n          .mul(sinceHeaderEpoch.length)\n          .add(\n            BI.from(sinceHeaderEpoch.index).mul(\n              (value as EpochSinceValue).length\n            )\n          ),\n        length: BI.from((value as EpochSinceValue).length).mul(\n          sinceHeaderEpoch.length\n        ),\n      };\n\n      if (\n        (value as EpochSinceValue).length === 0 &&\n        sinceHeaderEpoch.length !== 0\n      ) {\n        added.index = BI.from(sinceHeaderEpoch.index);\n        added.length = BI.from(sinceHeaderEpoch.length);\n      } else if (\n        sinceHeaderEpoch.length === 0 &&\n        (value as EpochSinceValue).length !== 0\n      ) {\n        added.index = BI.from((value as EpochSinceValue).index);\n        added.length = BI.from((value as EpochSinceValue).length);\n      }\n\n      if (\n        !BI.from(added.length).eq(0) &&\n        BI.from(added.index).gte(added.length)\n      ) {\n        added.number = added.index.div(added.length).add(added.number);\n        added.index = added.index.mod(added.length);\n      }\n\n      return (\n        BI.from(added.number).lt(tipHeaderEpoch.number) ||\n        (BI.from(added.number).eq(tipHeaderEpoch.number) &&\n          BI.from(added.index)\n            .mul(tipHeaderEpoch.length)\n            .lte(BI.from(tipHeaderEpoch.index).mul(added.length)))\n      );\n    }\n\n    if (type === \"blockNumber\") {\n      return BI.from(value)\n        .add(cellSinceValidationInfo.blockNumber)\n        .lte(tipSinceValidationInfo.blockNumber);\n    }\n\n    if (type === \"blockTimestamp\") {\n      if (\n        !tipSinceValidationInfo.median_timestamp ||\n        !cellSinceValidationInfo.median_timestamp\n      ) {\n        throw new Error(`Must provide median_timestamp!`);\n      }\n      return BI.from(value)\n        .mul(1000)\n        .add(cellSinceValidationInfo.median_timestamp)\n        .lte(tipSinceValidationInfo.median_timestamp);\n    }\n  }\n\n  return false;\n}\n\nfunction _toHex(num: number | BI) {\n  return \"0x\" + num.toString(16);\n}\n\nexport {\n  parseSince,\n  parseSinceCompatible,\n  parseEpoch,\n  maximumAbsoluteEpochSince,\n  generateAbsoluteEpochSince,\n  parseAbsoluteEpochSince,\n  validateAbsoluteEpochSince,\n  validateSince,\n  generateSince,\n  generateHeaderEpoch,\n};\n"],"mappings":"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"}