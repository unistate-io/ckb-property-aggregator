{"version":3,"file":"normalizers.js","names":["_bi","require","_reader","normalizeHexNumber","length","debugPath","value","ArrayBuffer","intValue","BI","from","toString","Error","view","DataView","i","start","setUint8","parseInt","substr","buffer","byteLength","array","Uint8Array","set","normalizeRawData","Reader","toArrayBuffer","normalizeObject","object","keys","result","key","f","Object","entries","NormalizeScript","script","codeHash","hashType","args","NormalizeOutPoint","outPoint","txHash","index","toNormalize","normalize","NormalizeCellInput","cellInput","since","previousOutput","NormalizeCellOutput","cellOutput","capacity","lock","type","type_","NormalizeCellDep","cellDep","depType","toNormalizeArray","normalizeFunction","map","item","NormalizeRawTransaction","rawTransaction","version","cellDeps","headerDeps","inputs","outputs","outputsData","NormalizeTransaction","transaction","witnesses","raw","NormalizeRawHeader","rawHeader","compactTarget","timestamp","number","epoch","parentHash","transactionsRoot","proposalsHash","extraHash","dao","NormalizeHeader","header","nonce","NormalizeUncleBlock","uncleBlock","proposals","NormalizeBlock","block","uncles","transactions","NormalizeCellbaseWitness","cellbaseWitness","message","NormalizeWitnessArgs","witnessArgs","inputType","outputType"],"sources":["../src/normalizers.js"],"sourcesContent":["// This package provides normalizer functions. Even though CKB uses molecule\n// as the serialization layer. There is still CKB specific knowledge that does\n// not belong in molecule. For example, all numbers in CKB protocols are\n// serialized using little endian format. This package tries to encode such\n// knowledge. The goal here, is that you are free to use whatever types that\n// makes most sense to represent the values. As long as you pass your object\n// through the normalizers here, molecule should be able to serialize the values\n// into correct formats required by CKB.\n//\n// Note this is only used when you need to deal with CKB structures in molecule\n// format. If you are using RPCs or GraphQL to interact with CKB, chances are you\n// will not need this package.\nimport { BI } from \"@ckb-lumos/bi\";\nimport { Reader } from \"./reader\";\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction normalizeHexNumber(length) {\n  return function (debugPath, value) {\n    if (!(value instanceof ArrayBuffer)) {\n      let intValue = BI.from(value).toString(16);\n      if (intValue.length % 2 !== 0) {\n        intValue = \"0\" + intValue;\n      }\n      if (intValue.length / 2 > length) {\n        throw new Error(\n          `${debugPath} is ${\n            intValue.length / 2\n          } bytes long, expected length is ${length}!`\n        );\n      }\n      const view = new DataView(new ArrayBuffer(length));\n      for (let i = 0; i < intValue.length / 2; i++) {\n        const start = intValue.length - (i + 1) * 2;\n        view.setUint8(i, parseInt(intValue.substr(start, 2), 16));\n      }\n      value = view.buffer;\n    }\n    if (value.byteLength < length) {\n      const array = new Uint8Array(length);\n      array.set(new Uint8Array(value), 0);\n      value = array.buffer;\n    }\n    return value;\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction normalizeRawData(length) {\n  return function (debugPath, value) {\n    value = new Reader(value).toArrayBuffer();\n    if (length > 0 && value.byteLength !== length) {\n      throw new Error(\n        `${debugPath} has invalid length ${value.byteLength}, required: ${length}`\n      );\n    }\n    return value;\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction normalizeObject(debugPath, object, keys) {\n  const result = {};\n\n  for (const [key, f] of Object.entries(keys)) {\n    const value = object[key];\n    if (value == null) {\n      throw new Error(`${debugPath} is missing ${key}!`);\n    }\n    result[key] = f(`${debugPath}.${key}`, value);\n  }\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeScript(script, { debugPath = \"script\" } = {}) {\n  return normalizeObject(debugPath, script, {\n    codeHash: normalizeRawData(32),\n    hashType: function (debugPath, value) {\n      switch (value) {\n        case \"data\":\n          return 0;\n        case \"type\":\n          return 1;\n        case \"data1\":\n          return 2;\n        case \"data2\":\n          return 4;\n        case 0:\n          return value;\n        case 1:\n          return value;\n        case 2:\n          return value;\n        case 4:\n          return value;\n        default:\n          throw new Error(`${debugPath}.hashType has invalid value: ${value}`);\n      }\n    },\n    args: normalizeRawData(-1),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeOutPoint(outPoint, { debugPath = \"outPoint\" } = {}) {\n  return normalizeObject(debugPath, outPoint, {\n    txHash: normalizeRawData(32),\n    index: normalizeHexNumber(4),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction toNormalize(normalize) {\n  return function (debugPath, value) {\n    return normalize(value, {\n      debugPath,\n    });\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellInput(\n  cellInput,\n  { debugPath = \"cell_input\" } = {}\n) {\n  return normalizeObject(debugPath, cellInput, {\n    since: normalizeHexNumber(8),\n    previousOutput: toNormalize(NormalizeOutPoint),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellOutput(\n  cellOutput,\n  { debugPath = \"cellOutput\" } = {}\n) {\n  const result = normalizeObject(debugPath, cellOutput, {\n    capacity: normalizeHexNumber(8),\n    lock: toNormalize(NormalizeScript),\n  });\n  if (cellOutput.type) {\n    result.type_ = NormalizeScript(cellOutput.type, {\n      debugPath: `${debugPath}.type`,\n    });\n  }\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellDep(cellDep, { debugPath = \"cell_dep\" } = {}) {\n  return normalizeObject(debugPath, cellDep, {\n    outPoint: toNormalize(NormalizeOutPoint),\n    depType: function (debugPath, value) {\n      switch (value) {\n        case \"code\":\n          return 0;\n        case \"depGroup\":\n          return 1;\n        case 0:\n          return value;\n        case 1:\n          return value;\n        default:\n          throw new Error(`${debugPath}.depType has invalid value: ${value}`);\n      }\n    },\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nfunction toNormalizeArray(normalizeFunction) {\n  return function (debugPath, array) {\n    return array.map((item, i) => {\n      return normalizeFunction(`${debugPath}[${i}]`, item);\n    });\n  };\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeRawTransaction(\n  rawTransaction,\n  { debugPath = \"raw_transaction\" } = {}\n) {\n  return normalizeObject(debugPath, rawTransaction, {\n    version: normalizeHexNumber(4),\n    cellDeps: toNormalizeArray(toNormalize(NormalizeCellDep)),\n    headerDeps: toNormalizeArray(normalizeRawData(32)),\n    inputs: toNormalizeArray(toNormalize(NormalizeCellInput)),\n    outputs: toNormalizeArray(toNormalize(NormalizeCellOutput)),\n    outputsData: toNormalizeArray(normalizeRawData(-1)),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeTransaction(\n  transaction,\n  { debugPath = \"transaction\" } = {}\n) {\n  const rawTransaction = NormalizeRawTransaction(transaction, {\n    debugPath: `(raw)${debugPath}`,\n  });\n  const result = normalizeObject(debugPath, transaction, {\n    witnesses: toNormalizeArray(normalizeRawData(-1)),\n  });\n  result.raw = rawTransaction;\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeRawHeader(\n  rawHeader,\n  { debugPath = \"raw_header\" } = {}\n) {\n  return normalizeObject(debugPath, rawHeader, {\n    version: normalizeHexNumber(4),\n    compactTarget: normalizeHexNumber(4),\n    timestamp: normalizeHexNumber(8),\n    number: normalizeHexNumber(8),\n    epoch: normalizeHexNumber(8),\n    parentHash: normalizeRawData(32),\n    transactionsRoot: normalizeRawData(32),\n    proposalsHash: normalizeRawData(32),\n    extraHash: normalizeRawData(32),\n    dao: normalizeRawData(32),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeHeader(header, { debugPath = \"header\" } = {}) {\n  const rawHeader = NormalizeRawHeader(header, {\n    debugPath: `(raw)${debugPath}`,\n  });\n  const result = normalizeObject(debugPath, header, {\n    nonce: normalizeHexNumber(16),\n  });\n  result.raw = rawHeader;\n  return result;\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeUncleBlock(\n  uncleBlock,\n  { debugPath = \"uncle_block\" } = {}\n) {\n  return normalizeObject(debugPath, uncleBlock, {\n    header: toNormalize(NormalizeHeader),\n    proposals: toNormalizeArray(normalizeRawData(10)),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeBlock(block, { debugPath = \"block\" } = {}) {\n  return normalizeObject(debugPath, block, {\n    header: toNormalize(NormalizeHeader),\n    uncles: toNormalizeArray(toNormalize(NormalizeUncleBlock)),\n    transactions: toNormalizeArray(toNormalize(NormalizeTransaction)),\n    proposals: toNormalizeArray(normalizeRawData(10)),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeCellbaseWitness(\n  cellbaseWitness,\n  { debugPath = \"cellbase_witness\" } = {}\n) {\n  return normalizeObject(debugPath, cellbaseWitness, {\n    lock: toNormalize(NormalizeScript),\n    message: normalizeRawData(-1),\n  });\n}\n/**\n * @deprecated please follow the {@link https://lumos-website.vercel.app/migrations/migrate-to-v0.19 migration-guide}\n */\nexport function NormalizeWitnessArgs(\n  witnessArgs,\n  { debugPath = \"witness_args\" } = {}\n) {\n  const result = {};\n  if (witnessArgs.lock) {\n    result.lock = normalizeRawData(-1)(`${debugPath}.lock`, witnessArgs.lock);\n  }\n  if (witnessArgs.inputType) {\n    result.inputType = normalizeRawData(-1)(\n      `${debugPath}.inputType`,\n      witnessArgs.inputType\n    );\n  }\n  if (witnessArgs.outputType) {\n    result.outputType = normalizeRawData(-1)(\n      `${debugPath}.outputType`,\n      witnessArgs.outputType\n    );\n  }\n  return result;\n}\n"],"mappings":"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"}